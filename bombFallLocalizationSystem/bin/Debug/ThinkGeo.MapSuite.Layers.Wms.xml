<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ThinkGeo.MapSuite.Layers.Wms</name>
    </assembly>
    <members>
        <member name="T:ThinkGeo.MapSuite.Layers.WmsLayerStyle">
            <summary>
            Structure for storing information about a WMS Layer Style.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsLayerStyle.Title">
            <summary>
            Title of this requesting WMS layer.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsLayerStyle.Name">
            <summary>
            Name of this requesting WMS layer.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsLayerStyle.Abstract">
            <summary>
            Abstract of this requesting WMS layer.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.Layers.WmsOnlineResource">
            <summary>
            Structure for Online Resource.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsOnlineResource.Type">
            <summary>
            Size of legend.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsOnlineResource.OnlineResource">
            <summary>
            Size of legend.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.Layers.WmsServerLayer">
            <remarks>
                <para>A WMS Layer includes many properties and attributes. However, the properties list below are
                not supported by now.
                </para>
                <para>Dimension</para>
                <para>Extent</para>
                <para>Attribution</para>
                <para>AuthorityURL</para>
                <para>Identifier</para>
                <para>MetadataURL</para>
                <para>DataURL</para>
                <para>FeatureListURL</para>
            </remarks>
            <summary>
            Represents an object that encapsulates a WMS Layer.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsServerLayer.Cascaded">
            <summary>
            0: layer has not been retransmitted by a Cascading Map Server.
            n: layer has been retransmitted n times.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsServerLayer.MinScale">
            <summary>
            Minimum scale for which it is appropriate to display this layer.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsServerLayer.MaxScale">
            <summary>
            Maximum scale for which it is appropriate to display this layer.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsServerLayer.Title">
            <summary>
            Title of this requesting WMS layer.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsServerLayer.Name">
            <summary>
            Name of this requesting WMS layer.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsServerLayer.Abstract">
            <summary>
            Abstract of this requesting WMS layer.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsServerLayer.Queryable">
            <summary>
            Queryable property of this requesting WMS layer.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsServerLayer.Opaque">
            <summary>
            False: map data represents vector features that probably do not completely fill space.
            True: map data are mostly or completely opaque.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsServerLayer.NoSubsets">
            <summary>
            False: WMS can map a subset of the full bounding box.
            True: WMS can only map the entire bounding box.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsServerLayer.FixedWidth">
            <summary>
            0: WMS can resize map to arbitrary width.
            nonzero: map has a fixed width that cannot be changed by the WMS.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsServerLayer.FixedHeight">
            <summary>
            0: WMS can resize map to arbitrary height.
            nonzero: map has a fixed height that cannot be changed by the WMS.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsServerLayer.KeyWords">
            <summary>
            KeyWords property of this requesting WMS layer.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsServerLayer.Styles">
            <summary>
            The styles supported by the layer.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsServerLayer.Crs">
            ' <summary>
            ' The Coordinate Reference Systems supported by the layer.
            ' </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsServerLayer.ChildLayers">
            <summary>
            Return child layers.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.Layers.WmsStyleLegend">
            <summary>
            Structure for storing WMS legend information.
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.Layers.WmsRasterLayer">
            <remarks>
            A Web Map Service (WMS) produces maps of spatially referenced data dynamically
            from geographic information. This International Standard defines a "map" to be
            a portrayal of geographic information as a digital image file suitable for
            display on a computer screen. A map is not the data itself. WMS-produced
            maps are generally rendered in a pictorial format such as PNG, GIF or JPEG, or
            occasionally as vector-based graphical elements in Scalable Vector Graphics (SVG)
            or Web Computer Graphics Metafile (WebCGM) formats.
            </remarks>
            <summary>Represents an object that encapsulates a Web Map Service (WMS) layer.</summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterLayer.#ctor">
            <summary>This is the constructor the for the class. If you use this constructor, then you need to set
            the required properties manually.</summary>
            <overloads>This is the default constructor.</overloads>
            <returns>None</returns>
            <remarks>None</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterLayer.#ctor(System.Uri)">
            <summary>
            This is the constructor the for the class.
            </summary>
            <remarks>This constructor initializes a new layer, then downloads and parses the service description.
            In an ASP.NET application, the service description is automatically cached for 24 hours when it is not specified.</remarks>
            <param name="uri">URI of the WMS server.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterLayer.#ctor(System.Uri,System.Net.IWebProxy)">
            <summary>
            This is the constructor the for the class.
            </summary>
            <remarks>This constructor initializes a new layer, then downloads and parses the service description.
            In an ASP.NET application, the service description is automatically cached for 24 hours when it is not specified.</remarks>
            <param name="uri">URI of the WMS server.</param>
            <param name="proxy">Proxy to use for the current WMS layer.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterLayer.Uri">
            <summary>
            This property specifies the URI of the WMS server.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterLayer.ActiveLayerNames">
            <summary>
            This property represents the available layers that can be requested from the client and shown on the map.
            </summary>
            <remarks>When requesting a map, a client may specify the layers to be shown on the map.</remarks>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterLayer.ActiveStyleNames">
            <summary>
            This property represents the available styles that can be requested from the client and shown on the map.
            </summary>
            <remarks>When requesting a map, a client may specify the styles to be shown on the map.</remarks>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterLayer.OutputFormat">
            <summary>
            This property gets or sets the desired output format for the map requested from the WMS.
            </summary>
            <remarks>When requesting a map, a client may specify the output format in which to show the map.
            Format are specified as MIME types such as "image/gif" or "image/png".
            </remarks>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterLayer.Credentials">
            <summary>
            This property gets or sets the base authentication interface for retrieving credentials for Web Client authentication.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterLayer.IsTransparent">
            <summary>
            This property gets or sets whether the response map image's background color is transparent or not.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterLayer.Proxy">
            <summary>
            This property gets or sets the proxy used for requesting a Web Response.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterLayer.Crs">
            <summary>
            This property gets or sets the projected or geographic coordinate reference system to be used.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterLayer.TimeoutInSecond">
            <summary>
            This property specifies the timeout of the web request in seconds.  The default timeout value is 20 seconds.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterLayer.Exceptions">
            <summary>
            This property indicates the format in which the client wishes to be notified of
            service exceptions.
            </summary>
            <remarks>
            Upon receiving a request that is invalid according to the OGC standard, the
            server shall issue a service exception report. The service report is meant to describe
            to the client application or its human user the reason(s) that the request is
            invalid.
            </remarks>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterLayer.Parameters">
            <summary>
            This property specifies a dictionary used to update the request sent from the client to
            the WMS server.
            </summary>
            <example>
            	<code lang="CS" title="C# sample" description="This example shows hot to add a cusotmize parameter to update the request url sent from the client to the WMS server.">
            		<![CDATA[
            WmsRasterSource target = new WmsRasterSource(new Uri(localWmsServer));
            target.Parameters.Add("ParameterKey", "ParameterValue");]]>
            	</code>
            	<code lang="VB" title="VB sample" description="This example shows how to update the request url sent from the client to the WMS server by adding some customized parameter.">
            		<![CDATA[
            Dim target As New WmsRasterSource(New Uri(localWmsServer))
            target.Parameters.Add("ParameterKey", "ParameterValue")]]>
            	</code>
            </example>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterLayer.HasBoundingBox">
            <summary>
            This property checks to see if a Layer has a BoundingBox or not. If it has no
            BoundingBox, it will throw an exception when you call the GetBoundingBox() and
            GetFullExtent() APIs.
            </summary>
            <remarks>The override in the WmsRasterLayer sets it to true.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterLayer.GetServerLayerNames">
            <summary>This method returns the names of all layers at the server side.</summary>
            <returns>This method returns the names of all layers at the server side.</returns>
            <remarks>None.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterLayer.GetServerStyleNames">
            <summary>This method returns the names of all styles at the server side.</summary>
            <returns>This method returns the names of all styles at the server side.</returns>
            <remarks>None.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterLayer.GetServerOutputFormats">
            <summary>This method returns the output format at the server side.</summary>
            <returns>This method returns the output format at the server side.</returns>
            <remarks>None.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterLayer.GetServerCrss">
            <summary>
            This method returns the projected or geographic coordinate reference systems to be used.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterLayer.GetServerExceptionFormats">
            <summary>This method returns the exception format at the server side.</summary>
            <returns>This method returns the exception format at the server side.</returns>
            <remarks>None.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterLayer.GetServiceVersion">
            <summary>
            This API gets the WMS server version of the service.
            </summary>
            <returns>Returning a string reflecting the version of the service in WMS.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterLayer.GetServerFeatureInfoFormats">
            <summary>
            This API gets the WMS server FeatureInfo formats of the service.
            </summary>
            <returns>This API returns the FeatureInfo formats supported on the server-side.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterLayer.GetServerCapabilitiesXml">
            <summary>
            This API gets the GetCapabilites document of the service.
            </summary>
            <returns>This API returns the GetCapabilites document of the service.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterLayer.GetRequestUrl(ThinkGeo.MapSuite.Shapes.RectangleShape,System.Int32,System.Int32)">
            <summary>
            Get the request URL from the client to the WMS.
            </summary>
            <param name="requestExtent">The world extent requested by the client to get the map.</param>
            <param name="canvasWidth">The returning map width, as well as the drawing canvas width.</param>
            <param name="canvasHeight">The returning map height, as well as the drawing canvas height.</param>
            <returns>The request URL from the client to the WMS.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterLayer.GetRequestUrlCore(ThinkGeo.MapSuite.Shapes.RectangleShape,System.Int32,System.Int32)">
            <summary>
            Get the request URL from the client to the WMS.
            </summary>
            <param name="requestExtent">The world extent requested by the client to get the map.</param>
            <param name="canvasWidth">The returning map width, as well as the drawing canvas width.</param>
            <param name="canvasHeight">The returning map height, as well as the drawing canvas height.</param>
            <returns>The request URL from the client to the WMS.</returns>
        </member>
        <member name="T:ThinkGeo.MapSuite.Layers.WmsRasterLayerExceptionDescription">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterLayerExceptionDescription.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterLayerExceptionDescription.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterLayerExceptionDescription.WmsCRSNotSet">
            <summary>
              Looks up a localized string similar to Coordinate Reference System not set..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterLayerExceptionDescription.WmsCRSNotSupport">
            <summary>
              Looks up a localized string similar to This CRS is not supported in the Wms server:.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterLayerExceptionDescription.WmsLayerDoesNotExists">
            <summary>
              Looks up a localized string similar to The Wms request LAYERS parameter is missing..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterLayerExceptionDescription.WmsNoLayerExists">
            <summary>
              Looks up a localized string similar to No layers exist in the Service Description..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterLayerExceptionDescription.WmsRequestParaNotExists">
            <summary>
              Looks up a localized string similar to The requested parameter does not exists in this Service Description..
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterLayerExceptionDescription.WmsServerNotSupportFormat">
            <summary>
              Looks up a localized string similar to This image format is not supported in the Wms server:.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterLayerExceptionDescription.WmsServerNotSupportLayer">
            <summary>
              Looks up a localized string similar to This layer is not supported in the Wms server:.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterLayerExceptionDescription.WmsServerNotSupportStyle">
            <summary>
              Looks up a localized string similar to This style is not supported in the Wms server:.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterLayerExceptionDescription.WmsStyleDoesNotExists">
            <summary>
              Looks up a localized string similar to The Wms request STYLES parameter is missing..
            </summary>
        </member>
        <member name="T:ThinkGeo.MapSuite.Layers.WmsRasterSource">
            <remarks>
            	<para>A Web Map Service (WMS) produces maps of spatially referenced data dynamically
                from geographic information. This international standand defines a "map" as a
                portrayal of geographic information as a digital image file suitable for display on
                a computer screen.</para>
            	<para>A map is not the the data itself. WMS-produced maps are generally rendered in
                a pictorial format such as PNG or JPEG, or occasionally as vector-based graphical
                elements in Scalable Vector Graphics (SVG) or Web Computer Graphics
                Metafile (WebCGM) formats.</para>
            </remarks>
            <summary>Represents an object that encapsulates a Web Map Service (WMS) source.</summary>
        </member>
        <member name="E:ThinkGeo.MapSuite.Layers.WmsRasterSource.SendingWebRequest">
            <summary>
            This event is called before sending the reqeust for raster image.
            </summary>
            <remarks>
            This event is called before sending the reqeust for raster image.<br/>
            It is typical that user want to get the url of reqeust and modify it according to their requirements.
            For example, user could create a signiture for it, and verify it on the server side.
            </remarks>
        </member>
        <member name="E:ThinkGeo.MapSuite.Layers.WmsRasterSource.SentWebRequest">
            <summary>
            This event is called after sent the request for raster image and the HttpWebResponse has come back.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterSource.#ctor">
            <summary>This is the constructor for the class. If you use this constructor, then you need to set
            the required properties manually.</summary>
            <overloads>This is the default constructor.</overloads>
            <returns>None</returns>
            <remarks>None</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterSource.#ctor(System.Uri)">
            <summary>
            This is the constructor the for the class.
            </summary>
            <remarks>This constructor initializes a new WmsRasterSource and downloads and parses the service description.
            In an ASP.NET application, the service description is automatically cached for 24 hours when it is not specified.</remarks>
            <param name="uri">URI of the WMS server.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterSource.#ctor(System.Uri,System.Net.IWebProxy)">
            <summary>
            This is the constructor the for the class.
            </summary>
            <remarks>This constructor initializes a new WmsRasterSource and downloads and parses the service description
            In an ASP.NET application, the service description is automatically cached for 24 hours when it is not specified.</remarks>
            <param name="uri">URI of the WMS server.</param>
            <param name="proxy">Proxy to use for the current WMS layer.</param>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterSource.ActiveLayerNames">
            <summary>
            This property allows the active layers requested from the client to be shown on the map.
            </summary>
            <remarks>When requesting a map, a client may specify the layers to be shown on the map.</remarks>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterSource.ActiveStyleNames">
            <summary>
            This property allows the active styles requested from the client to be shown on the map.
            </summary>
            <remarks>When requesting a map, a client may specify the styles to be shown on the map.</remarks>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterSource.Uri">
            <summary>
            This property specifies the URI of the WMS server.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterSource.IsTransparent">
            <summary>
            This property gets or sets whether the response map image's background color is transparent or not.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterSource.OutputFormat">
            <summary>
            This property gets or sets the desired output format for the map being requested from the WMS.
            </summary>
            <remarks>When requesting a map, a client may specify the output format in which to show the map.
            Formats are specified as MIME types such as "image/gif" or "image/png".
            </remarks>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterSource.Proxy">
            <summary>
            This property gets or sets the proxy used for requesting a Web Response.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterSource.TimeoutInSecond">
            <summary>
            This property specifies the timeout of the web request in seconds.  The default timeout value is 20 seconds.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterSource.Crs">
            <summary>
            This property gets or sets the projected or geographic coordinate reference system to be used.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterSource.Credentials">
            <summary>
            This property gets or sets the base authentication interface for retrieving credentials for Web Client authentication.
            </summary>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterSource.Exceptions">
            <summary>
            This property indicates the format in which the client wishes to be notified of
            service exceptions.
            </summary>
            <remarks>
            Upon receiving a request that is invalid according to the OGC standard, the
            server shall issue a service exception report. The service report is meant to describe
            to the client application or its human user the reason(s) that the request is
            invalid.
            </remarks>
        </member>
        <member name="P:ThinkGeo.MapSuite.Layers.WmsRasterSource.Parameters">
            <summary>
            This property specifies a dictionary used to update the request sent from the client to
            the WMS server.
            </summary>
            <example>
            	<code lang="CS" title="C# sample" description="This example shows how to add a customized parameter to update the request URI sent from the client to the WMS server.">
            		<![CDATA[
            WmsRasterSource target = new WmsRasterSource(new Uri(localWmsServer));
            target.Parameters.Add("ParameterKey", "ParameterValue");]]>
            	</code>
            	<code lang="VB" title="VB sample" description="This example shows how to update the request URI sent from the client to the WMS server by adding a customized parameter.">
            		<![CDATA[
            Dim target As New WmsRasterSource(New Uri(localWmsServer))
            target.Parameters.Add("ParameterKey", "ParameterValue")]]>
            	</code>
            </example>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterSource.GetServerLayerNames">
            <summary>This method returns the names of all layers at the server side.</summary>
            <returns>The names of all layers at the server side.</returns>
            <remarks>None.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterSource.GetServerStyleNames">
            <summary>This method returns the names of all styles at the server side.</summary>
            <returns>The names of all styles at the server side.</returns>
            <remarks>None.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterSource.GetServerOutputFormats">
            <summary>This method returns the output format at the server side.</summary>
            <returns>The output format at the server side.</returns>
            <remarks>None.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterSource.GetServerCrss">
            <summary>
            This method returns the projected or geographic coordinate reference systems to be used.
            </summary>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterSource.GetServerExceptionFormats">
            <summary>This method returns the exception format at the server side.</summary>
            <returns>The exception format at the server side.</returns>
            <remarks>None.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterSource.GetServiceVersion">
            <summary>
            This API gets the WMS server version of the service.
            </summary>
            <returns>Returns a string reflecting the version of the service in WMS.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterSource.GetServerFeatureInfoFormats">
            <summary>
            This API gets the WMS server FeatureInfo formats of the service.
            </summary>
            <returns>This API returns the FeatureInfo formats supported on the server-side.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterSource.GetServerCapabilitiesXml">
            <summary>
            This API gets the GetCapabilites document of the service.
            </summary>
            <returns>This API returns the GetCapabilites document of the service.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterSource.GetRequestUrl(ThinkGeo.MapSuite.Shapes.RectangleShape,System.Int32,System.Int32)">
            <summary>
            Get the request URL from the client to the WMS.
            </summary>
            <param name="worldExtent">The world extent requested by the client to get the map.</param>
            <param name="canvasWidth">The returning map width, as well as the drawing canvas width.</param>
            <param name="canvasHeight">The returning map height, as well as the drawing canvas height.</param>
            <returns>The request URL from the client to the WMS.</returns>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterSource.GetImageWidthCore">
            <exception cref="T:System.InvalidOperationException" caption="InvalidOperationException">In the event you attempt to call this method on a image source which has not been opened, it will throw an InvalidOperationException.</exception>
            <summary>This method returns the width of the image in screen coordinates.</summary>
            <returns>The width of the image in screen coordinates.</returns>
            <remarks>This virtual method is called from the concrete method GetImageWidth.
            It returns the width of the image in screen coordinates.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterSource.GetImageHeightCore">
            <exception cref="T:System.InvalidOperationException" caption="InvalidOperationException">In the event you attempt to call this method on a image source which has not been opened, it will throw an InvalidOperationException.</exception>
            <summary>This method returns the height of the image in screen coordinates.</summary>
            <returns>The height of the image in screen coordinates.</returns>
            <remarks>This virtual method is called from the concrete method GetImageHeight.
            It returns the height of the image in screen coordinates.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterSource.OpenCore">
            <summary>
            This method opens the RasterSource so that it is initialized and ready to
            use.
            </summary>
            <remarks>
            This protected virtual method is called from the concrete public method Open.
            The Open method plays an important role, as it is responsible for initializing the
            RasterSource. Most methods on the RasterSource will throw an exception if the state of
            the RasterSource is not opened. When the map draws each layer, it will open the
            RasterSource as one of its first steps; then, after it is finished drawing with that
            layer, it will close it. In this way, we are sure to release all resources used by the
            RasterSource.<br/>
            	<br/>
            When implementing this abstract method, consider opening files for file-based sources,
            connecting to databases in the database-based sources and so on. You will get a chance
            to close these in the Close method of the RasterSource.
            </remarks>
            <returns>None</returns>
            <exception cref="T:System.InvalidOperationException" caption="InvalidOperationException">In the event you attempt to call this method on a image source which has already been opened, it will throw an InvalidOperationException.</exception>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterSource.GetBoundingBoxCore">
            <exception cref="T:System.InvalidOperationException" caption="InvalidOperationException">In the event you attempt to call this method on a image source which has not been opened, it will throw an InvalidOperationException.</exception>
            <summary>This method returns the bounding box of the RasterSource.</summary>
            <returns>The bounding box of the RasterSource.</returns>
            <remarks>This method returns the bounding box of the RasterSource.</remarks>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterSource.GetImageCore(ThinkGeo.MapSuite.Shapes.RectangleShape,System.Int32,System.Int32)">
            <exception cref="T:System.ArgumentNullException" caption="ArgumentNullException">If you pass in a worldExtent that is invalid, we will throw an ArgumentNullException.</exception>
            <exception cref="T:System.ArgumentException" caption="ArgumentException">If you pass in a worldExtent that is invalid, we will throw an ArgumentException.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException" caption="ArgumentOutOfRangeException">If you pass in a image width that is smaller than or equal to 0, we will throw an ArgumentOutOfRangeException.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException" caption="ArgumentOutOfRangeException">If you pass in a image height that is smaller than or equal to 0, we will throw an ArgumentOutOfRangeException.</exception>
            <exception cref="T:System.InvalidOperationException" caption="InvalidOperationException">In the event you attempt to call this method on a image source which has not been opened, it will throw an InvalidOperationException.</exception>
            <remarks>
            This method is responsible for returning the image based on the parameters passed
            in. As the core version of this method is abstract, you will need to override it when
            creating our own RasterSource.
            </remarks>
            <summary>
            This method returns an image based on the worldExtent and image width and
            height.
            </summary>
            <returns>
            This method returns an image based on the worldExtent and image width and
            height.
            </returns>
            <param name="worldExtent">This parameter represents the worldExtent you want to draw.</param>
            <param name="canvasWidth">This parameter represents the width of the image you want to draw.</param>
            <param name="canvasHeight">This parameter represents the height of the image you want to draw.</param>
        </member>
        <member name="M:ThinkGeo.MapSuite.Layers.WmsRasterSource.GetRemoteXml(System.String,System.Net.IWebProxy,System.Net.ICredentials)">
            <remarks>
                <para>
                      We only support application/vnd.ogc.wms_xml type.
                      We don't support UPDATESEQUENCE property.
                </para>
            </remarks>
        </member>
    </members>
</doc>
