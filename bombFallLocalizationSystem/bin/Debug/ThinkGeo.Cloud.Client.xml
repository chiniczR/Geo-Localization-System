<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ThinkGeo.Cloud.Client</name>
    </assembly>
    <members>
        <member name="T:ThinkGeo.Cloud.BaseClient">
            <summary>   
            A base class that handles the underlying authentication and communication with the GIS Server. 
            </summary>
            <remarks>A base class that handles the underlying authentication and communication with the GIS Server. </remarks>
        </member>
        <member name="E:ThinkGeo.Cloud.BaseClient.GettingAccessToken">
            <summary>
            Occurs before getting an AccessToken.
            </summary>
        </member>
        <member name="E:ThinkGeo.Cloud.BaseClient.SendingWebRequest">
            <summary>
            Occurs before sending a web request.
            </summary>
        </member>
        <member name="E:ThinkGeo.Cloud.BaseClient.SentWebRequest">
            <summary>
            Occurs after the response of a web request is gotten.
            </summary>
        </member>
        <member name="M:ThinkGeo.Cloud.BaseClient.#ctor">
            <summary>
            This method is the default protected constructor. You need apply client Id and secret by properties.
            </summary>
        </member>
        <member name="M:ThinkGeo.Cloud.BaseClient.#ctor(System.String,System.String)">
            <summary>
            This method is the default protected constructor with a NativeConfidential client ID and secret. It will send a
            request to the GIS Server to acquire an access token, which will then be added to the
            Header for all future requests.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="clientId"/> or <paramref name="clientSecret"/> is null.</exception>
            <param name="clientId">The NativeConfidential client Id with which to authenticate. </param>
            <param name="clientSecret">The NativeConfidential client secret with which to authenticate. </param>
        </member>
        <member name="P:ThinkGeo.Cloud.BaseClient.TimeoutInSeconds">
            <summary>
            The request timeout, default 100 seconds
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.BaseClient.WebProxy">
            <summary>
            The proxy used for requesting a Web Response.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.BaseClient.ClientId">
            <summary>
            A GIS Server NativeConfidential client ID.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.BaseClient.ClientSecret">
            <summary>
            A GIS Server NativeConfidential client secret.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.BaseClient.BaseUris">
            <summary>
            Candidate Gis Server Uris. This collection must have one uri at least before sending any request.
            </summary>
        </member>
        <member name="M:ThinkGeo.Cloud.BaseClient.AuthenticateWebRequest(System.Net.WebRequest)">
            <summary>
            Apply token to header of the webRequest 
            </summary>
            <param name="webRequest">The webRequest which need to apply token to header</param>
        </member>
        <member name="M:ThinkGeo.Cloud.BaseClient.GetToken">
            <summary>
            Get an AccessToken from server.
            </summary>
            <returns>The AccessToken from server. if the request is canceled by user, return null</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.BaseClient.GetTokenCore">
            <summary>
            Get an AccessToken from server.
            </summary>
            <returns>The AccessToken from server. if the request is canceled by user, return null</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.BaseClient.SendWebRequest(System.Net.WebRequest)">
            <summary>
            Send the web request, the access token will be added to web request header.
            </summary>
            <param name="webRequest"></param>
            <returns>The HTTP response.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.BaseClient.SendWebRequestAsync(System.Net.WebRequest)">
            <summary>
            Send the web request asynchronously, the access token will be added to web request header.
            </summary>
            <param name="webRequest"></param>
            <returns>The HTTP response.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.BaseClient.GetNextCandidateBaseUri">
            <summary>
            Get a Gis Server uri in BaseUris by polling way
            </summary>
            <returns>A Gis Server uri</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.BaseClient.GetNextCandidateBaseUriCore">
            <summary>
            Get a Gis Server uri in BaseUris by polling method
            </summary>
            <returns>A Gis Server uri</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.BaseClient.OnGettingAccessToken(ThinkGeo.Cloud.GettingAccessTokenEventArgs)">
            <summary>
            Occurs before getting an AccessToken.
            </summary>
            <param name="e">Event argument for GettingAccessToken event.</param>
        </member>
        <member name="M:ThinkGeo.Cloud.BaseClient.OnSendingWebRequest(ThinkGeo.MapSuite.Layers.SendingWebRequestEventArgs)">
            <summary>
            Occurs before sending a web request.
            </summary>
            <param name="e">Event argument for SendingWebRequest event.</param>
        </member>
        <member name="M:ThinkGeo.Cloud.BaseClient.OnSentWebRequest(ThinkGeo.MapSuite.Layers.SentWebRequestEventArgs)">
            <summary>
            Occurs after the response of a web request is gotten.
            </summary>
            <param name="e">Event argument for SentWebRequest event.</param>
        </member>
        <member name="M:ThinkGeo.Cloud.BaseClient.Dispose">
            <summary>
            Disposes BaseClient class.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.GettingAccessTokenEventArgs">
            <summary>
            This is the event arguments class for the GettingAccessToken event on the BaseClient class. It
            is raised before getting an access token.
            </summary>
            <remarks>
            This is the event arguments class for the GettingAccessToken event on the BaseClient class. It
            is raised before getting an access token.
            </remarks>
        </member>
        <member name="M:ThinkGeo.Cloud.GettingAccessTokenEventArgs.#ctor">
            <summary>This is a constructor for the class.</summary>
        </member>
        <member name="M:ThinkGeo.Cloud.GettingAccessTokenEventArgs.#ctor(System.Net.WebRequest)">
            <summary>
            This is a constructor for the class.
            </summary>
            <param name="webRequest">The WebRequest of getting an access token.</param>
        </member>
        <member name="M:ThinkGeo.Cloud.GettingAccessTokenEventArgs.#ctor(System.Net.WebRequest,System.Boolean)">
            <summary>
            This is a constructor for the class.
            </summary>
            <param name="webRequest">The WebRequest of getting an access token.</param>
            <param name="cancel"></param>
        </member>
        <member name="P:ThinkGeo.Cloud.GettingAccessTokenEventArgs.WebRequest">
            <summary>
            The WebRequest of getting an access token.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.GettingAccessTokenEventArgs.Cancel">
            <summary>
            This property gets and sets the value that indicates you want to cancel getting a access token.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.ColorClient">
            <summary>
            A class provides the methods to access the ColorUtilities APIs.
            </summary>
            <remarks>A class provides the methods to access the ColorUtilities APIs.</remarks>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.#ctor">
            <summary>
            Initilizes an instance. You need apply client Id and secret by properties.
            </summary>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.#ctor(System.String,System.String)">
            <summary>
            Initializes an instance with ClientID and ClientSecret.
            It will send a request to GIS Server to gain the token which will be added to the Header for all the requests.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="clientId"/> or <paramref name="clientSecret"/> is null.</exception>
            <param name="clientId">The ClientID for the auth.</param>
            <param name="clientSecret">The ClientSecret for the auth.</param>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInAnalogousFamily(System.Int32)">
            <summary>
            Generats an "analogous family" of colors by an input color.
            </summary>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>An "analogous family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInAnalogousFamilyAsync(System.Int32)">
            <summary>
            Generats an "analogous family" of colors by an input color.
            </summary>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>An "analogous family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInAnalogousFamily(ThinkGeo.MapSuite.Drawing.GeoColor,System.Int32)">
            <summary>
            Generats an "analogous family" of colors by an input color.
            </summary>
            <param name="color"> Input color.</param>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>An "analogous family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInAnalogousFamilyAsync(ThinkGeo.MapSuite.Drawing.GeoColor,System.Int32)">
            <summary>
            Generats an "analogous family" of colors by an input color.
            </summary>
            <param name="color"> Input color.</param>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>An "analogous family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInComplementaryFamily(System.Int32)">
            <summary>
            Generats a "complementary family" of colors by an input color.
            </summary>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>A "complementary family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInComplementaryFamilyAsync(System.Int32)">
            <summary>
            Generats a "complementary family" of colors by an input color.
            </summary>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>A "complementary family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInComplementaryFamily(ThinkGeo.MapSuite.Drawing.GeoColor,System.Int32)">
            <summary>
            Generats a "complementary family" of colors by an input color.
            </summary>
            <param name="color"> Input color.</param>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>A "complementary family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInComplementaryFamilyAsync(ThinkGeo.MapSuite.Drawing.GeoColor,System.Int32)">
            <summary>
            Generats a "complementary family" of colors by an input color.
            </summary>
            <param name="color"> Input color.</param>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>A "complementary family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInContrastingFamily(System.Int32)">
            <summary>
            Generats a "Contrasting family" of colors by an input color.
            </summary>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>A "Contrasting family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInContrastingFamilyAsync(System.Int32)">
            <summary>
            Generats a "Contrasting family" of colors by an input color.
            </summary>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>A "Contrasting family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInContrastingFamily(ThinkGeo.MapSuite.Drawing.GeoColor,System.Int32)">
            <summary>
            Generats a "contrasting family" of colors by an input color.
            </summary>
            <param name="color"> Input color.</param>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>A "contrasting family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInContrastingFamilyAsync(ThinkGeo.MapSuite.Drawing.GeoColor,System.Int32)">
            <summary>
            Generats a "contrasting family" of colors by an input color.
            </summary>
            <param name="color"> Input color.</param>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>A "contrasting family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInHueFamily(System.Int32)">
            <summary>
            Generats a "hue family" of colors by an input color.
            </summary>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>A "hue family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInHueFamilyAsync(System.Int32)">
            <summary>
            Generats a "hue family" of colors by an input color.
            </summary>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>A "hue family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInHueFamily(ThinkGeo.MapSuite.Drawing.GeoColor,System.Int32)">
            <summary>
            Generats a "hue family" of colors by an input color.
            </summary>
            <param name="color"> Input color.</param>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>A "hue family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInHueFamilyAsync(ThinkGeo.MapSuite.Drawing.GeoColor,System.Int32)">
            <summary>
            Generats a "hue family" of colors by an input color.
            </summary>
            <param name="color"> Input color.</param>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>A "hue family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInQualityFamily(System.Int32)">
            <summary>
            Generats a "quality family" of colors by an input color.
            </summary>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>A "quality family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInQualityFamilyAsync(System.Int32)">
            <summary>
            Generats a "quality family" of colors by an input color.
            </summary>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>A "quality family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInQualityFamily(ThinkGeo.MapSuite.Drawing.GeoColor,System.Int32)">
            <summary>
            Generats a "quality family" of colors by an input color.
            </summary>
            <param name="color"> Input color.</param>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>A "quality family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInQualityFamilyAsync(ThinkGeo.MapSuite.Drawing.GeoColor,System.Int32)">
            <summary>
            Generats a "quality family" of colors by an input color.
            </summary>
            <param name="color"> Input color.</param>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>A "quality family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInTetradFamily(System.Int32)">
            <summary>
            Generats a "tetrad family" of colors by an input color.
            </summary>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>A "tetrad family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInTetradFamilyAsync(System.Int32)">
            <summary>
            Generats a "tetrad family" of colors by an input color.
            </summary>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>A "tetrad family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInTetradFamily(ThinkGeo.MapSuite.Drawing.GeoColor,System.Int32)">
            <summary>
            Generats a "tetrad family" of colors by an input color.
            </summary>
            <param name="color"> Input color.</param>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>A "tetrad family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInTetradFamilyAsync(ThinkGeo.MapSuite.Drawing.GeoColor,System.Int32)">
            <summary>
            Generats a "tetrad family" of colors by an input color.
            </summary>
            <param name="color"> Input color.</param>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>A "tetrad family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInTriadFamily(System.Int32)">
            <summary>
            Generats a "triad family" of colors by an input color.
            </summary>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>A "triad family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInTriadFamilyAsync(System.Int32)">
            <summary>
            Generats a "triad family" of colors by an input color.
            </summary>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>A "triad family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInTriadFamily(ThinkGeo.MapSuite.Drawing.GeoColor,System.Int32)">
            <summary>
            Generats a "triad family" of colors by an input color.
            </summary>
            <param name="color"> Input color.</param>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>A "triad family" of colors.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ColorClient.GetColorsInTriadFamilyAsync(ThinkGeo.MapSuite.Drawing.GeoColor,System.Int32)">
            <summary>
            Generats a "triad family" of colors by an input color.
            </summary>
            <param name="color"> Input color.</param>
            <param name="numberOfColors">A number of output colors desired.</param>
            <returns>A "triad family" of colors.</returns>
        </member>
        <member name="T:ThinkGeo.Cloud.ElevationClient">
            <summary>
            A class provides the methods to access the Elevation APIs.
            </summary>
            <remarks>A class provides the methods to access the Elevation APIs.</remarks>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.#ctor">
            <summary>
            Initilizes an instance. You need apply client Id and secret by properties.
            </summary>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.#ctor(System.String,System.String)">
            <summary>
            Initializes an instance with ClientID and ClientSecret. 
            It will send a request to GIS Server to gain the token which will be added to the Header for all the requests.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="clientId"/> or <paramref name="clientSecret"/> is null.</exception>
            <param name="clientId">The ClientId for the auth.</param>
            <param name="clientSecret">The ClientSecret for the auth.</param>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfPointInDecimalDegree(System.Double,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of a point.
            </summary>
            <param name="latitude">The latitude of the point.</param>
            <param name="longitude">The longitude of the point.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>Returns the elevation for the point</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfPoint(System.Double,System.Double,System.Int32,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of a point.
            </summary>
            <param name="y">The Y coordinate of the point.</param>
            <param name="x">The X coordinate of the point.</param>
            <param name="pointProjectionInSrid">The SRID of the point</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>Returns the elevation for the point</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfPoint(System.Double,System.Double,System.String,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of a point.
            </summary>
            <param name="x">The X coordinate of the point.</param>
            <param name="y">The Y coordinate of the point.</param>
            <param name="pointProjectionInProj4String">The proj4string of the point.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>Returns the elevation for the point</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfPointInDecimalDegreeAsync(System.Double,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of a point.
            </summary>
            <param name="latitude">The latitude of the point.</param>
            <param name="longitude">The longitude of the point.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>Returns the elevation for the point</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfPointAsync(System.Double,System.Double,System.Int32,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of a point.
            </summary>
            <param name="y">The Y coordinate of the point.</param>
            <param name="x">The X coordinate of the point.</param>
            <param name="pointProjectionInSrid">The SRID of the point.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>Returns the elevation for the point</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfPointAsync(System.Double,System.Double,System.String,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of a point.
            </summary>
            <param name="x">The Y coordinate of the point.</param>
            <param name="y">The X coordinate of the point.</param>
            <param name="pointProjectionInProj4String">The proj4string of the point.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>Returns the elevation for the point</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfPointsInDecimalDegree(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.PointShape},ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of multi points.
            </summary>
            <param name="points">The points to get the elevation.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A ElevationResult with collection of the elevation data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfPoints(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.PointShape},System.Int32,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of multi points.
            </summary>
            <param name="points">The points to get the elevation.</param>
            <param name="pointsProjectionInSrid">The SRID (coordinate system) of the input line.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A ElevationResult with collection of the elevation data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfPoints(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.PointShape},System.String,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of multi points.
            </summary>
            <param name="points">The points to get the elevation.</param>
            <param name="pointsProjectionInProj4String">The proj4string of the point.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A ElevationResult with collection of the elevation data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfPointsInDecimalDegreeAsync(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.PointShape},ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of multi points.
            </summary>
            <param name="points">The points to get the elevation.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A ElevationResult with collection of the elevation data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfPointsAsync(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.PointShape},System.Int32,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of multi points.
            </summary>
            <param name="points">The points to get the elevation.</param>
            <param name="pointsProjectionInSrid">The SRID (coordinate system) of the input line.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A ElevationResult with collection of the elevation data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfPointsAsync(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.PointShape},System.String,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of multi points.
            </summary>
            <param name="points">The points to get the elevation.</param>
            <param name="pointsProjectionInProj4String">The proj4string of the point.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A ElevationResult with collection of the elevation data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfLineInDecimalDegree(ThinkGeo.MapSuite.Shapes.LineBaseShape,System.Int32,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of points along a line.
            </summary>
            <param name="line">The line to get the elevation.</param>
            <param name="numberOfSegments">Splits the requested line into this many segments, then calculates elevation of each point joining the segments.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A ElevationResult with collection of the elevation data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfLine(ThinkGeo.MapSuite.Shapes.LineBaseShape,System.Int32,System.Int32,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of points along a line.
            </summary>
            <param name="line">The line to get the elevation.</param>
            <param name="lineProjectionInSrid">The SRID (coordinate system) of the input line.</param>
            <param name="numberOfSegments">Splits the requested line into this many segments, then calculates elevation of each point joining the segments.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A ElevationResult with collection of the elevation data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfLine(ThinkGeo.MapSuite.Shapes.LineBaseShape,System.String,System.Int32,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of points along a line.
            </summary>
            <param name="line">The line to get the elevation.</param>
            <param name="lineProjectionInProj4String">The proj4string (coordinate system) of the input line.</param>
            <param name="numberOfSegments">Splits the requested line into this many segments, then calculates elevation of each point joining the segments.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A ElevationResult with collection of the elevation data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfLineInDecimalDegree(ThinkGeo.MapSuite.Shapes.LineBaseShape,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of points along a line.
            </summary>
            <param name="line">The line to get the elevation.</param>
            <param name="intervalDistance">Splits the requested line into intervals of this length. The unit of measure for this distance is specified by the IntervalDistanceUnit parameter.</param>
            <param name="intervalDistanceUnit">The unit of measure in which the <para>IntervalDistance</para> is expressed.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A ElevationResult with collection of the elevation data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfLine(ThinkGeo.MapSuite.Shapes.LineBaseShape,System.Int32,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of points along a line.
            </summary>
            <param name="line">The line to get the elevation.</param>
            <param name="lineProjectionInSrid">The SRID (coordinate system) of the input line.</param>
            <param name="intervalDistance">Splits the requested line into intervals of this length. The unit of measure for this distance is specified by the IntervalDistanceUnit parameter.</param>
            <param name="intervalDistanceUnit">The unit of measure in which the <para>IntervalDistance</para> is expressed.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A ElevationResult with collection of the elevation data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfLine(ThinkGeo.MapSuite.Shapes.LineBaseShape,System.String,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of points along a line.
            </summary>
            <param name="line">The line to get the elevation.</param>
            <param name="lineProjectionInProj4String">The proj4string (coordinate system) of the input line.</param>
            <param name="intervalDistance">Splits the requested line into intervals of this length. The unit of measure for this distance is specified by the IntervalDistanceUnit parameter.</param>
            <param name="intervalDistanceUnit">The unit of measure in which the <para>IntervalDistance</para> is expressed.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A ElevationResult with collection of the elevation data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfLineInDecimalDegreeAsync(ThinkGeo.MapSuite.Shapes.LineBaseShape,System.Int32,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of points along a line.
            </summary>
            <param name="line">The line to get the elevation.</param>
            <param name="numberOfSegments">Splits the requested line into this many segments, then calculates elevation of each point joining the segments.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A ElevationResult with collection of the elevation data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfLineAsync(ThinkGeo.MapSuite.Shapes.LineBaseShape,System.Int32,System.Int32,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of points along a line.
            </summary>
            <param name="line">The line to get the elevation.</param>
            <param name="lineProjectionInSrid">The SRID (coordinate system) of the input line.</param>
            <param name="numberOfSegments">Splits the requested line into this many segments, then calculates elevation of each point joining the segments.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A ElevationResult with collection of the elevation data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfLineAsync(ThinkGeo.MapSuite.Shapes.LineBaseShape,System.String,System.Int32,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of points along a line.
            </summary>
            <param name="line">The line to get the elevation.</param>
            <param name="lineProjectionInProj4String">The proj4string (coordinate system) of the input line.</param>
            <param name="numberOfSegments">Splits the requested line into this many segments, then calculates elevation of each point joining the segments.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A ElevationResult with collection of the elevation data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfLineInDecimalDegreeAsync(ThinkGeo.MapSuite.Shapes.LineBaseShape,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of points along a line.
            </summary>
            <param name="line">The line to get the elevation.</param>
            <param name="intervalDistance">Splits the requested line into intervals of this length. The unit of measure for this distance is specified by the IntervalDistanceUnit parameter.</param>
            <param name="intervalDistanceUnit">The unit of measure in which the <para>IntervalDistance</para> is expressed.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A ElevationResult with collection of the elevation data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfLineAsync(ThinkGeo.MapSuite.Shapes.LineBaseShape,System.Int32,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of points along a line.
            </summary>
            <param name="line">The line to get the elevation.</param>
            <param name="lineProjectionInSrid">The SRID (coordinate system) of the input line.</param>
            <param name="intervalDistance">Splits the requested line into intervals of this length. The unit of measure for this distance is specified by the IntervalDistanceUnit parameter.</param>
            <param name="intervalDistanceUnit">The unit of measure in which the <para>IntervalDistance</para> is expressed.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A ElevationResult with collection of the elevation data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfLineAsync(ThinkGeo.MapSuite.Shapes.LineBaseShape,System.String,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of points along a line.
            </summary>
            <param name="line">The line to get the elevation.</param>
            <param name="lineProjectionInProj4String">The proj4string (coordinate system) of the input line.</param>
            <param name="intervalDistance">Splits the requested line into intervals of this length. The unit of measure for this distance is specified by the IntervalDistanceUnit parameter.</param>
            <param name="intervalDistanceUnit">The unit of measure in which the <para>IntervalDistance</para> is expressed.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A ElevationResult with collection of the elevation data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetGradeOfLineInDecimalDegree(ThinkGeo.MapSuite.Shapes.LineShape,System.Int32,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the grade (slope) of a line.
            </summary>
            <param name="line">The line that nedd to get the grade.</param>
            <param name="numberOfSegments">Splits the requested line into this many segments, then calculates elevation of each point joining the segments.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A collection of the elevation grade data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetGradeOfLine(ThinkGeo.MapSuite.Shapes.LineShape,System.Int32,System.Int32,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the grade (slope) of a line.
            </summary>
            <param name="line">The line that nedd to get the grade.</param>
            <param name="lineProjectionInSrid">The SRID (coordinate system) of the input line.</param>
            <param name="numberOfSegments">Splits the requested line into this many segments, then calculates elevation of each point joining the segments.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A collection of the elevation grade data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetGradeOfLine(ThinkGeo.MapSuite.Shapes.LineShape,System.String,System.Int32,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the grade (slope) of a line.
            </summary>
            <param name="line">The line that nedd to get the grade.</param>
            <param name="lineProjectionInProj4String">The proj4string (coordinate system) of the input line.</param>
            <param name="numberOfSegments">Splits the requested line into this many segments, then calculates elevation of each point joining the segments.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A collection of the elevation grade data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetGradeOfLineInDecimalDegree(ThinkGeo.MapSuite.Shapes.LineShape,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
             Get the grade (slope) of a line.
            </summary>
            <param name="line">The line that nedd to get the grade.</param>
            <param name="intervalDistance">Splits the requested line into intervals of this length. The unit of measure for this distance is specified by the IntervalDistanceUnit parameter.</param>
            <param name="intervalDistanceUnit">The unit of measure in which the <para>IntervalDistance</para> is expressed.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A collection of the elevation grade data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetGradeOfLine(ThinkGeo.MapSuite.Shapes.LineShape,System.Int32,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
             Get the grade (slope) of a line.
            </summary>
            <param name="line">The line that nedd to get the grade.</param>
            <param name="lineProjectionInSrid">The SRID (coordinate system) of the input line.</param>
            <param name="intervalDistance">Splits the requested line into intervals of this length. The unit of measure for this distance is specified by the IntervalDistanceUnit parameter.</param>
            <param name="intervalDistanceUnit">The unit of measure in which the <para>IntervalDistance</para> is expressed.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A collection of the elevation grade data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetGradeOfLine(ThinkGeo.MapSuite.Shapes.LineShape,System.String,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
             Get the grade (slope) of a line.
            </summary>
            <param name="line">The line that nedd to get the grade.</param>
            <param name="lineProjectionInProj4String">The proj4string (coordinate system) of the input line.</param>
            <param name="intervalDistance">Splits the requested line into intervals of this length. The unit of measure for this distance is specified by the IntervalDistanceUnit parameter.</param>
            <param name="intervalDistanceUnit">The unit of measure in which the <para>IntervalDistance</para> is expressed.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A collection of the elevation grade data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetGradeOfLineInDecimalDegreeAsync(ThinkGeo.MapSuite.Shapes.LineShape,System.Int32,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the grade (slope) of a line.
            </summary>
            <param name="line">The line that nedd to get the grade.</param>
            <param name="numberOfSegments">Splits the requested line into this many segments, then calculates elevation of each point joining the segments.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A collection of the elevation grade data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetGradeOfLineAsync(ThinkGeo.MapSuite.Shapes.LineShape,System.Int32,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the grade (slope) of a line.
            </summary>
            <param name="line">The line that nedd to get the grade.</param>
            <param name="lineProjectionInSrid">The SRID (coordinate system) of the input line.</param>
            <param name="intervalDistance">Splits the requested line into intervals of this length. The unit of measure for this distance is specified by the IntervalDistanceUnit parameter.</param>
            <param name="intervalDistanceUnit">The unit of measure in which the <para>IntervalDistance</para> is expressed.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A collection of the elevation grade data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetGradeOfLineAsync(ThinkGeo.MapSuite.Shapes.LineShape,System.String,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the grade (slope) of a line.
            </summary>
            <param name="line">The line that nedd to get the grade.</param>
            <param name="lineProjectionInProj4String">The proj4string (coordinate system) of the input line.</param>
            <param name="intervalDistance">Splits the requested line into intervals of this length. The unit of measure for this distance is specified by the IntervalDistanceUnit parameter.</param>
            <param name="intervalDistanceUnit">The unit of measure in which the <para>IntervalDistance</para> is expressed.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A collection of the elevation grade data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetGradeOfLineInDecimalDegreeAsync(ThinkGeo.MapSuite.Shapes.LineShape,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
             Get the grade (slope) of a line.
            </summary>
            <param name="line">The line that nedd to get the grade.</param>
            <param name="intervalDistance">Splits the requested line into intervals of this length. The unit of measure for this distance is specified by the IntervalDistanceUnit parameter.</param>
            <param name="intervalDistanceUnit">The unit of measure in which the <para>IntervalDistance</para> is expressed.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A collection of the elevation grade data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetGradeOfLineAsync(ThinkGeo.MapSuite.Shapes.LineShape,System.Int32,System.Int32,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
             Get the grade (slope) of a line.
            </summary>
            <param name="line">The line that nedd to get the grade.</param>
            <param name="lineProjectionInSrid">The SRID (coordinate system) of the input line.</param>
            <param name="numberOfSegments">Splits the requested line into this many segments, then calculates elevation of each point joining the segments.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A collection of the elevation grade data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetGradeOfLineAsync(ThinkGeo.MapSuite.Shapes.LineShape,System.String,System.Int32,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
             Get the grade (slope) of a line.
            </summary>
            <param name="line">The line that nedd to get the grade.</param>
            <param name="lineProjectionInProj4String">The proj4string (coordinate system) of the input line.</param>
            <param name="numberOfSegments">Splits the requested line into this many segments, then calculates elevation of each point joining the segments.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A collection of the elevation grade data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfAreaInDecimalDegree(ThinkGeo.MapSuite.Shapes.AreaBaseShape,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of a matrix of points within an area.
            </summary>
            <param name="area">The area of a polygon shape to get the elevation.</param>
            <param name="intervalDistance">The distance between every two points in the area matrix.
            Elevation of each point will be calculated and returned.
            The unit of measure for this distance is specified by the <para>IntervalDistanceUnit</para> parameter.</param>
            <param name="intervalDistanceUnit">The unit of measure in which the IntervalDistance is expressed.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A ElevationResult with collection of the elevation data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfArea(ThinkGeo.MapSuite.Shapes.AreaBaseShape,System.Int32,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of a matrix of points within an area.
            </summary>
            <param name="area">The area of a polygon shape to get the elevation.</param>
            <param name="areaProjectionInSrid">The SRID (coordinate system) of the input line.</param>
            <param name="intervalDistance">The distance between every two points in the area matrix.
            Elevation of each point will be calculated and returned.
            The unit of measure for this distance is specified by the <para>IntervalDistanceUnit</para> parameter.</param>
            <param name="intervalDistanceUnit">The unit of measure in which the IntervalDistance is expressed.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A ElevationResult with collection of the elevation data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfArea(ThinkGeo.MapSuite.Shapes.AreaBaseShape,System.String,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of a matrix of points within an area.
            </summary>
            <param name="area">The area of a polygon shape to get the elevation.</param>
            <param name="areaProjectionInProj4String">The proj4string (coordinate system) of the input line.</param>
            <param name="intervalDistance">The distance between every two points in the area matrix.
            Elevation of each point will be calculated and returned.
            The unit of measure for this distance is specified by the <para>IntervalDistanceUnit</para> parameter.</param>
            <param name="intervalDistanceUnit">The unit of measure in which the IntervalDistance is expressed.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A ElevationResult with collection of the elevation data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfAreaInDecimalDegreeAsync(ThinkGeo.MapSuite.Shapes.AreaBaseShape,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of a matrix of points within an area.
            </summary>
            <param name="area">The area of a polygon shape to get the elevation.</param>
            <param name="intervalDistance">The distance between every two points in the area matrix.
            Elevation of each point will be calculated and returned.
            The unit of measure for this distance is specified by the <para>IntervalDistanceUnit</para> parameter.</param>
            <param name="intervalDistanceUnit">The unit of measure in which the IntervalDistance is expressed.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A ElevationResult with collection of the elevation data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfAreaAsync(ThinkGeo.MapSuite.Shapes.AreaBaseShape,System.Int32,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of a matrix of points within an area.
            </summary>
            <param name="area">The area of a polygon shape to get the elevation.</param>
            <param name="areaProjectionInSrid">The SRID (coordinate system) of the input line.</param>
            <param name="intervalDistance">The distance between every two points in the area matrix.
            Elevation of each point will be calculated and returned.
            The unit of measure for this distance is specified by the <para>IntervalDistanceUnit</para> parameter.</param>
            <param name="intervalDistanceUnit">The unit of measure in which the IntervalDistance is expressed.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A ElevationResult with collection of the elevation data.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationClient.GetElevationOfAreaAsync(ThinkGeo.MapSuite.Shapes.AreaBaseShape,System.String,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Get the elevation of a matrix of points within an area.
            </summary>
            <param name="area">The area of a polygon shape to get the elevation.</param>
            <param name="areaProjectionInProj4String">The proj4string (coordinate system) of the input line.</param>
            <param name="intervalDistance">The distance between every two points in the area matrix.
            Elevation of each point will be calculated and returned.
            The unit of measure for this distance is specified by the <para>IntervalDistanceUnit</para> parameter.</param>
            <param name="intervalDistanceUnit">The unit of measure in which the IntervalDistance is expressed.</param>
            <param name="elevationUnit">The unit of measure in which the elevation result is expressed. Defaults to "Feet".</param>
            <returns>A ElevationResult with collection of the elevation data.</returns>
        </member>
        <member name="T:ThinkGeo.Cloud.ElevationPointResult">
            <summary>
            A class presents the elevation data.
            </summary>
            <remarks>A class presents the elevation data.</remarks>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationPointResult.#ctor(System.Double,ThinkGeo.MapSuite.Shapes.PointShape,ThinkGeo.Cloud.ThinkGeoCloudApplicationException)">
            <summary>
            The constructor of this struct
            </summary>
            <param name="elevation"></param>
            <param name="point"></param>
            <param name="exception"></param>
        </member>
        <member name="P:ThinkGeo.Cloud.ElevationPointResult.Elevation">
            <summary>
            The elevation value, this value is NaN when exception occur
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.ElevationPointResult.Point">
            <summary>
            The Point of the Elevation.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.ElevationPointResult.Exception">
            <summary>
            The exception when getting one point's elevation
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.ElevationResult">
            <summary>
            Represents the result of the elevation.
            </summary>
            <remarks>Represents the result of the elevation.</remarks>
        </member>
        <member name="M:ThinkGeo.Cloud.ElevationResult.#ctor(ThinkGeo.Cloud.ElevationPointResult,ThinkGeo.Cloud.ElevationPointResult,System.Double)">
            <summary>
            The constructor of this class
            </summary>
            <param name="highestElevationPoint">The highest elevation Point.</param>
            <param name="lowestElevationPoint">The lowest elevation Point.</param>
            <param name="averageElevation">The average elevation.</param>
        </member>
        <member name="P:ThinkGeo.Cloud.ElevationResult.ElevationPoints">
            <summary>
            The elevation points collection
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.ElevationResult.HighestElevationPoint">
            <summary>
            The highest elevation Point.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.ElevationResult.LowestElevationPoint">
            <summary>
            The lowest elevation Point.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.ElevationResult.AverageElevation">
            <summary>
            The average elevation.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.GradeResult">
            <summary>
            Represents the result of the grade.
            </summary>
            <remarks>Represents the result of the grade.</remarks>
        </member>
        <member name="M:ThinkGeo.Cloud.GradeResult.#ctor(ThinkGeo.Cloud.GradeSegment,ThinkGeo.Cloud.GradeSegment,System.Double)">
            <summary>
            The constructor of this class
            </summary>
            <param name="highestGradeSegment">The highest grade segment.</param>
            <param name="lowestGradeSegment">The lowest grade segment.</param>
            <param name="averageGrade">The average grade.</param>
        </member>
        <member name="P:ThinkGeo.Cloud.GradeResult.GradeSegments">
            <summary>
            The collection of the elevation grade data.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.GradeResult.HighestGradeSegment">
            <summary>
            The highest grade segment.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.GradeResult.LowestGradeSegment">
            <summary>
            The lowest grade segment.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.GradeResult.AverageGrade">
            <summary>
            The average grade.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.GradeSegment">
            <summary>
            Represents a grade segment
            </summary>
            <remarks>Represents a grade segment</remarks>
        </member>
        <member name="M:ThinkGeo.Cloud.GradeSegment.#ctor(System.Double,ThinkGeo.MapSuite.Shapes.LineShape,System.Double,System.Double)">
            <summary>
            The constructor of this struct
            </summary>
            <param name="grade">The grade value.</param>
            <param name="gradeLine">The grade Line</param>
            <param name="startingElevation">The elevation of GradeLine start point</param>
            <param name="endingElevation">The elevation of GradeLine end point</param>
        </member>
        <member name="P:ThinkGeo.Cloud.GradeSegment.Grade">
            <summary>
            The grade value.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.GradeSegment.GradeLine">
            <summary>
            The grade Line
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.GradeSegment.StartingElevation">
            <summary>
            The elevation of GradeLine start point
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.GradeSegment.EndingElevation">
            <summary>
            The elevation of GradeLine end point
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.GeocodingClient">
            <summary>
            A class provides the methods to access the Geocoding APIs.
            </summary>
            <remarks>A class provides the methods to access the Geocoding APIs.</remarks>
        </member>
        <member name="M:ThinkGeo.Cloud.GeocodingClient.#ctor">
            <summary>
            Initilizes an instance. You need apply client Id and secret by properties.
            </summary>
        </member>
        <member name="M:ThinkGeo.Cloud.GeocodingClient.#ctor(System.String,System.String)">
            <summary>
            Initializes an instance with ClientID and ClientSecret. 
            It will send a request to GIS Server to gain the token which will be added to the Header for all the requests.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="clientId"/> or <paramref name="clientSecret"/> is null.</exception>
            <param name="clientId">The ClientID for the auth.</param>
            <param name="clientSecret">The ClientSecret for the auth.</param>
        </member>
        <member name="M:ThinkGeo.Cloud.GeocodingClient.Search(System.String)">
            <summary>
            Search for a location expression
            </summary>
            <param name="location">The location expression</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.GeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.GeocodingClient.Search(System.String,ThinkGeo.Cloud.GeocodingOptions)">
            <summary>
            Search for a location expression
            </summary>
            <param name="location">The location expression</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.GeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.GeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.GeocodingClient.SearchAsync(System.String)">
            <summary>
            Search for a location expression
            </summary>
            <param name="location">The location expression</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.GeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.GeocodingClient.SearchAsync(System.String,ThinkGeo.Cloud.GeocodingOptions)">
            <summary>
            Search for a location expression
            </summary>
            <param name="location">The location expression</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.GeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.GeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.GeocodingClient.Search(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Search for multi locations
            </summary>
            <param name="locations">The multi location</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.GeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.GeocodingClient.Search(System.Collections.Generic.IEnumerable{System.String},ThinkGeo.Cloud.GeocodingOptions)">
            <summary>
            Search for multi locations
            </summary>
            <param name="locations">The multi location</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.GeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.GeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.GeocodingClient.SearchAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Search for multi locations
            </summary>
            <param name="locations">The multi location</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.GeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.GeocodingClient.SearchAsync(System.Collections.Generic.IEnumerable{System.String},ThinkGeo.Cloud.GeocodingOptions)">
            <summary>
            Search for multi locations
            </summary>
            <param name="locations">The multi location</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.GeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.GeocodingResult"/></returns>
        </member>
        <member name="T:ThinkGeo.Cloud.GeocodingLocation">
            <summary>
            A class presents the location for Geocoding.
            </summary>
            <remarks>A class presents the location for Geocoding.</remarks>
        </member>
        <member name="P:ThinkGeo.Cloud.GeocodingLocation.LocationPoint">
            <summary>
            The position of location.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.GeocodingLocation.LocationName">
            <summary>
            The name of location.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.GeocodingLocation.LocationType">
            <summary>
            The type of the location
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.GeocodingLocation.BoundingBox">
            <summary>
            The bounding box of the location
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.GeocodingLocation.Shape">
            <summary>
            The spatial geometry of the returned locations in specified projection.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.GeocodingLocation.Properties">
            <summary>
            The properties of the location
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.GeocodingLocationType">
            <summary>
            This enumeration specifies the location type
            </summary>
            <remarks>This enumeration specifies the location type</remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "F:ThinkGeo.Cloud.GeocodingLocationType.Default" -->
        <member name="F:ThinkGeo.Cloud.GeocodingLocationType.Country">
            <summary>
            This enumeration item means Country
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.GeocodingLocationType.State">
            <summary>
            This enumeration item means State
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.GeocodingLocationType.County">
            <summary>
            This enumeration item means County
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.GeocodingLocationType.City">
            <summary>
            This enumeration item means City
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.GeocodingLocationType.Street">
            <summary>
            This enumeration item means Street
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.GeocodingLocationType.Address">
            <summary>
            This enumeration item means Address
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.GeocodingLocationType.Zipcode">
            <summary>
            This enumeration item means Zipcode
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.GeocodingLocationType.Locality">
            <summary>
            This enumeration item means Locality
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.GeocodingLocationType.Town">
            <summary>
            This enumeration item means Town
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.GeocodingLocationType.Neighbourhood">
            <summary>
            This enumeration item means Neighbourhood
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.GeocodingLocationType.Place">
            <summary>
            This enumeration item means Place
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.GeocodingLocationType.District">
            <summary>
            This enumeration item means District
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.GeocodingOptions">
            <summary>
            A class provides the options for the Geocoding APIs.
            </summary>
            <remarks>A class provides the options for the Geocoding APIs.</remarks>
        </member>
        <member name="P:ThinkGeo.Cloud.GeocodingOptions.Autocomplete">
            <summary>
            Whether to return the autocomplete results or not. When autocomplete is enabled, all results will be started with
            the query string, rather than just the response includes it extractly. false by default.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.GeocodingOptions.MaxResults">
            <summary>
            The maximun number of results to return. Defaults to 10.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.GeocodingOptions.BBox">
            <summary>
            Limit the results to only those contained within the supplied bounding box.
            null by default, as the global.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.GeocodingOptions.ResultDetail">
            <summary>
            Specifies whether the geocoding results should be verbose or not. 
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.GeocodingOptions.SearchMode">
            <summary>
            Specifies whether to attempt approximate, as well as exact, matching.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.GeocodingOptions.LocationType">
            <summary>
            This enumeration specifies the location type.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.GeocodingOptions.Countries">
            <summary>
            Limit the results only within the countries specified here.It can be one or more “Country Code” mentioned 
            <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO 3166-1 alpha-2</a>. e.g.gb for the United Kingdom, de for Germany.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.GeocodingOptions.Language">
            <summary>
            Specify what language would like to be returned in the response.If no specified language, take English instead.
            The possible values can be any “Language Code” mentioned at <a href="https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes">ISO 639-1 language code</a>.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.GeocodingOptions.ResultProjectionInSrid">
            <summary>
            Specifies the SRID (spatial reference system ID). If this value less than or equal to 0, it means than you don't use SRID.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.GeocodingOptions.ResultProjectionInProj4String">
            <summary>
            Specifies the proj4string (coordinate system) 
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.GeocodingOptions.Debug">
            <summary>
            Whether to return the detailed exception message. false by default.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.GeocodingResult">
            <summary>
            Represents the result of the Geocoding.
            </summary>
            <remarks>Represents the result of the Geocoding.</remarks>
        </member>
        <member name="M:ThinkGeo.Cloud.GeocodingResult.#ctor(System.Collections.Generic.IEnumerable{ThinkGeo.Cloud.GeocodingLocation},ThinkGeo.Cloud.ThinkGeoCloudApplicationException)">
            <summary>
            The constructor of this class.
            </summary>
            <param name="locations">The geocoding locations</param>
            <param name="exception">The exception when geocoding</param>
        </member>
        <member name="P:ThinkGeo.Cloud.GeocodingResult.Locations">
            <summary>
            The geocoding locations. When exception occurs, this property will be null.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.GeocodingResult.Exception">
            <summary>
            The exception when geocoding
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.GeocodingResultDetail">
            <summary>
            This enumeration specifies whether the geocoding results should be verbose or not.
            </summary>
            <remarks>This enumeration specifies whether the geocoding results should be verbose or not.</remarks>
        </member>
        <member name="F:ThinkGeo.Cloud.GeocodingResultDetail.Default">
            <summary>
            Default value of the enumation, the same as Standard.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.GeocodingResultDetail.Verbose">
            <summary>
            This enumeration item means that the reverse geocoding result has all properties
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.GeocodingResultDetail.Standard">
            <summary>
            This enumeration item means that the reverse geocoding result has fewer properties
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.GeocodingSearchMode">
            <summary>
            This enumeration specifies whether to attempt approximate, as well as exact, matching
            </summary>
            <remarks>This enumeration specifies whether to attempt approximate, as well as exact, matching</remarks>
        </member>
        <member name="F:ThinkGeo.Cloud.GeocodingSearchMode.Default">
            <summary>
            Default value of the enumation, the same as ExactMatch.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.GeocodingSearchMode.ExactMatch">
            <summary>
            This enumeration item means that the geocoding result is exact matching.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.GeocodingSearchMode.FuzzyMatch">
            <summary>
            This enumeration item means that the geocoding result is approximate matching.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.MapsQueryClient">
            <summary>
            A class provides the methods to access the MapsQuery APIs.
            </summary>
            <remarks>A class provides the methods to access the MapsQuery APIs.</remarks>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.#ctor">
            <summary>
            Initilizes an instance. You need apply client Id and secret by properties.
            </summary>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.#ctor(System.String,System.String)">
            <summary>
            Initializes an instance with ClientID and ClientSecret. 
            It will send a request to GIS Server to gain the token which will be added to the Header for all the requests.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="clientId"/> or <paramref name="clientSecret"/> is null.</exception>
            <param name="clientId">The ClientID for the auth.</param>
            <param name="clientSecret">The ClientSecret for the auth.</param>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesWithin(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that are within the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesWithin(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.Int32,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that are within the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="srid"> Specifies the SRID (spatial reference system ID). Defaults to 4326.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesWithin(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.String,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that are within the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="proj4String">Specifies the proj4String (coordinate system).</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesContaining(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that contain the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesContaining(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.Int32,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that contain the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="srid"> Specifies the SRID (spatial reference system ID). Defaults to 4326.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesContaining(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.String,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that contain the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="proj4String">Specifies the proj4String (coordinate system).</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesIntersecting(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that intersect the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesIntersecting(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.Int32,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that intersect the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="srid"> Specifies the SRID (spatial reference system ID). Defaults to 4326.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesIntersecting(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.String,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that intersect the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="proj4String">Specifies the proj4String (coordinate system).</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesOverlapping(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that overlap the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesOverlapping(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.Int32,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that overlap the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="srid"> Specifies the SRID (spatial reference system ID). Defaults to 4326.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesOverlapping(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.String,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that overlap the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="proj4String">Specifies the proj4String (coordinate system).</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesTouching(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that touch the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesTouching(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.Int32,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that touch the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="srid"> Specifies the SRID (spatial reference system ID). Defaults to 4326.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesTouching(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.String,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that touch the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="proj4String">Specifies the proj4String (coordinate system).</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesNearest(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.Int32,ThinkGeo.Cloud.MapsQueryNearestQueryOptions)">
            <summary>
            Get the features that are nearest to the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="maxResults">The maximum number of features to return.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesNearest(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.Int32,System.Int32,ThinkGeo.Cloud.MapsQueryNearestQueryOptions)">
            <summary>
            Get the features that are nearest to the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="srid"> Specifies the SRID (spatial reference system ID). Defaults to 4326.</param>
            <param name="maxResults">The maximum number of features to return.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesNearest(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.String,System.Int32,ThinkGeo.Cloud.MapsQueryNearestQueryOptions)">
            <summary>
            Get the features that are nearest to the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="proj4String">Specifies the proj4String (coordinate system).</param>
            <param name="maxResults">The maximum number of features to return.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesNearest(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.Int32,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.MapsQueryNearestQueryOptions)">
            <summary>
            Get the features that are nearest to the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="maxResults">The maximum number of features to return.</param>
            <param name="searchRadius">The radius of the search area around the target geometry.</param>
            <param name="searchRadiusUnit">The unit of measure in which the <para>searchRadius</para> is expressed.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesNearest(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.Int32,System.Int32,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.MapsQueryNearestQueryOptions)">
            <summary>
            Get the features that are nearest to the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="srid"> Specifies the SRID (spatial reference system ID). Defaults to 4326.</param>
            <param name="maxResults">The maximum number of features to return.</param>
            <param name="searchRadius">The radius of the search area around the target geometry.</param>
            <param name="searchRadiusUnit">The unit of measure in which the <para>searchRadius</para> is expressed.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesNearest(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.String,System.Int32,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.MapsQueryNearestQueryOptions)">
            <summary>
            Get the features that are nearest to the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="proj4String">Specifies the proj4String (coordinate system).</param>
            <param name="maxResults">The maximum number of features to return.</param>
            <param name="searchRadius">The radius of the search area around the target geometry.</param>
            <param name="searchRadiusUnit">The unit of measure in which the <para>searchRadius</para> is expressed.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesWithinDistance(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that are within a certain distance of the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="distance">The distance within which to find features.</param>
            <param name="distanceUnit">The unit of measure in which the <para>distance</para> is expressed.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesWithinDistance(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.Int32,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that are within a certain distance of the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="srid"> Specifies the SRID (spatial reference system ID). Defaults to 4326.</param>
            <param name="distance">The distance within which to find features.</param>
            <param name="distanceUnit">The unit of measure in which the <para>distance</para> is expressed.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesWithinDistance(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.String,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that are within a certain distance of the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="proj4String">Specifies the proj4String (coordinate system).</param>
            <param name="distance">The distance within which to find features.</param>
            <param name="distanceUnit">The unit of measure in which the <para>distance</para> is expressed.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesCustom(ThinkGeo.Cloud.MapsQueryCustomQueryOptions)">
            <summary>
            Perform a custom spatial query, using the specified query layer, spatial relationship type, and query feature.
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetLayers">
            <summary>
            List the available query layers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetAttributesOfLayer(System.String)">
            <summary>
            List the feature attributes available on the given query layer.
            </summary>
            <param name="queryLayer">the query layer.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesWithinAsync(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that are within the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesWithinAsync(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.Int32,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that are within the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="srid"> Specifies the SRID (spatial reference system ID). Defaults to 4326.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesWithinAsync(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.String,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that are within the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="proj4String">Specifies the proj4String (coordinate system).</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesContainingAsync(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that contain the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesContainingAsync(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.Int32,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that contain the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="srid"> Specifies the SRID (spatial reference system ID). Defaults to 4326.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesContainingAsync(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.String,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that contain the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="proj4String">Specifies the proj4String (coordinate system).</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesIntersectingAsync(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that intersect the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesIntersectingAsync(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.Int32,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that intersect the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="srid"> Specifies the SRID (spatial reference system ID). Defaults to 4326.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesIntersectingAsync(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.String,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that intersect the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="proj4String">Specifies the proj4String (coordinate system).</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesOverlappingAsync(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that overlap the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesOverlappingAsync(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.Int32,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that overlap the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="srid"> Specifies the SRID (spatial reference system ID). Defaults to 4326.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesOverlappingAsync(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.String,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that overlap the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="proj4String">Specifies the proj4String (coordinate system).</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesTouchingAsync(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that touch the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesTouchingAsync(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.Int32,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that touch the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="srid"> Specifies the SRID (spatial reference system ID). Defaults to 4326.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesTouchingAsync(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.String,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that touch the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="proj4String">Specifies the proj4String (coordinate system).</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesNearestAsync(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.Int32,ThinkGeo.Cloud.MapsQueryNearestQueryOptions)">
            <summary>
            Get the features that are nearest to the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="maxResults">The maximum number of features to return.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesNearestAsync(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.Int32,System.Int32,ThinkGeo.Cloud.MapsQueryNearestQueryOptions)">
            <summary>
            Get the features that are nearest to the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="srid"> Specifies the SRID (spatial reference system ID). Defaults to 4326.</param>
            <param name="maxResults">The maximum number of features to return.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesNearestAsync(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.String,System.Int32,ThinkGeo.Cloud.MapsQueryNearestQueryOptions)">
            <summary>
            Get the features that are nearest to the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="proj4String">Specifies the proj4String (coordinate system).</param>
            <param name="maxResults">The maximum number of features to return.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesNearestAsync(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.Int32,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.MapsQueryNearestQueryOptions)">
            <summary>
            Get the features that are nearest to the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="maxResults">The maximum number of features to return.</param>
            <param name="searchRadius">The radius of the search area around the target geometry.</param>
            <param name="searchRadiusUnit">The unit of measure in which the <para>searchRadius</para> is expressed.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesNearestAsync(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.Int32,System.Int32,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.MapsQueryNearestQueryOptions)">
            <summary>
            Get the features that are nearest to the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="srid"> Specifies the SRID (spatial reference system ID). Defaults to 4326.</param>
            <param name="maxResults">The maximum number of features to return.</param>
            <param name="searchRadius">The radius of the search area around the target geometry.</param>
            <param name="searchRadiusUnit">The unit of measure in which the <para>searchRadius</para> is expressed.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesNearestAsync(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.String,System.Int32,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.MapsQueryNearestQueryOptions)">
            <summary>
            Get the features that are nearest to the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="proj4String">Specifies the proj4String (coordinate system).</param>
            <param name="maxResults">The maximum number of features to return.</param>
            <param name="searchRadius">The radius of the search area around the target geometry.</param>
            <param name="searchRadiusUnit">The unit of measure in which the <para>searchRadius</para> is expressed.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesWithinDistanceAsync(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that are within a certain distance of the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="distance">The distance within which to find features.</param>
            <param name="distanceUnit">The unit of measure in which the <para>distance</para> is expressed.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesWithinDistanceAsync(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.Int32,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that are within a certain distance of the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="srid"> Specifies the SRID (spatial reference system ID). Defaults to 4326.</param>
            <param name="distance">The distance within which to find features.</param>
            <param name="distanceUnit">The unit of measure in which the <para>distance</para> is expressed.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesWithinDistanceAsync(System.String,ThinkGeo.MapSuite.Shapes.BaseShape,System.String,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.MapsQuerySpatialQueryOptions)">
            <summary>
            Get the features that are within a certain distance of the target shape.
            </summary>
            <param name="queryLayer">The query layer.</param>
            <param name="shape">The target shape.</param>
            <param name="proj4String">Specifies the proj4String (coordinate system).</param>
            <param name="distance">The distance within which to find features.</param>
            <param name="distanceUnit">The unit of measure in which the <para>distance</para> is expressed.</param>
            <param name="options">The options of quering.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetFeaturesCustomAsync(ThinkGeo.Cloud.MapsQueryCustomQueryOptions)">
            <summary>
            Perform a custom spatial query, using the specified query layer, spatial relationship type, and query feature.
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetLayersAsync">
            <summary>
            List the available query layers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsQueryClient.GetAttributesOfLayerAsync(System.String)">
            <summary>
            List the feature attributes available on the given query layer.
            </summary>
            <param name="queryLayer">the query layer.</param>
            <returns></returns>
        </member>
        <member name="T:ThinkGeo.Cloud.MapsQueryCustomQueryOptions">
            <summary>
            The class contains the options of the custom query.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.MapsQueryCustomQueryOptions.QueryLayer">
            <summary>
            The layer to be queried. Value can be one of the available query layers.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.MapsQueryCustomQueryOptions.QueryType">
            <summary>
            The type of query to perform.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.MapsQueryCustomQueryOptions.Shape">
            <summary>
            The target shape.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.MapsQueryCustomQueryOptions.Srid">
            <summary>
            The SRID (coordinate system ID) of target geometry and results. Mutually exclusive from the <para>Proj4String</para> parameter. Defaults to 4326.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.MapsQueryCustomQueryOptions.Proj4String">
            <summary>
            The Proj4 projection string (coordinate system) of target geometry and results. Mutually exclusive from the <para>Srid</para> parameter.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.MapsQueryCustomQueryOptions.Distance">
            <summary>
            The distance within which to find features. If not specified, defaults to 200.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.MapsQueryCustomQueryOptions.DistanceUnit">
            <summary>
            The unit of measure in which the <para>Distance</para> is expressed. Defaults to "Meter".
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.MapsQueryCustomQueryOptions.SearchRadius">
            <summary>
            The radius of the search area around the target geometry. If not specified, it's assumed that there is no limit.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.MapsQueryCustomQueryOptions.SearchRadiusUnit">
            <summary>
            The unit of measure in which the <para>SearchRadius</para> is expressed. Defaults to "Meter".
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.MapsQueryCustomQueryOptions.MaxResults">
            <summary>
            The maximum number of features to return. Defaults to 100.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.MapsQueryCustomQueryOptions.ReturnFeatureAttributes">
            <summary>
            If true, specifies that the feature attribute column names and values will be returned in the response. Defaults to true.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.MapsQueryCustomQueryOptions.FeatureAttributesToReturn">
            <summary>
            If <para>ReturnFeatureAttributes</para> is true, this allows the user to specify which a specific subset of attributes to be returned.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.MapsQueryCustomQueryType">
            <summary>
            The query type of custom query.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.MapsQueryCustomQueryType.Within">
            <summary>
            Within.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.MapsQueryCustomQueryType.Containing">
            <summary>
            Containing.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.MapsQueryCustomQueryType.Intersecting">
            <summary>
            Intersecting.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.MapsQueryCustomQueryType.Overlapping">
            <summary>
            Overlapping.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.MapsQueryCustomQueryType.Touching">
            <summary>
            Touching.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.MapsQueryCustomQueryType.Nearest">
            <summary>
            Nearest.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.MapsQueryCustomQueryType.WithinDistance">
            <summary>
            WithinDistance.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.MapsQueryGetAttributesOfLayerResult">
            <summary>
            The result of get attributes of layer.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.MapsQueryGetAttributesOfLayerResult.Attributes">
            <summary>
            The attributes of the layer.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.MapsQueryGetAttributesOfLayerResult.Exception">
            <summary>
            The exception when getting attributes of layer.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.MapsQueryGetLayersResult">
            <summary>
            The result of get layers.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.MapsQueryGetLayersResult.QueryLayers">
            <summary>
            The available query layers.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.MapsQueryGetLayersResult.Exception">
            <summary>
            The exception when getting layers.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.MapsQueryLayers">
            <summary>
            The available query layers.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.MapsQueryLayers.Countries">
            <summary>
            Countries.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.MapsQueryLayers.States">
            <summary>
            States.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.MapsQueryLayers.Roads">
            <summary>
            Roads.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.MapsQueryLayers.Rail">
            <summary>
            Rail.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.MapsQueryLayers.Addresses">
            <summary>
            Addresses.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.MapsQueryLayers.Cities">
            <summary>
            Cities.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.MapsQueryLayers.LandUse">
            <summary>
            LandUse.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.MapsQueryLayers.Places">
            <summary>
            Places.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.MapsQueryLayers.Pois">
            <summary>
            Pois.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.MapsQueryLayers.Transport">
            <summary>
            Transport.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.MapsQueryLayers.Water">
            <summary>
            Water.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.MapsQueryLayers.Waterways">
            <summary>
            Waterways.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.MapsQueryLayers.Buildings">
            <summary>
            Buildings.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.MapsQueryNearestQueryOptions">
            <summary>
            The class contains the options of the nearest query.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.MapsQueryNearestQueryOptions.ReturnFeatureAttributes">
            <summary>
            If true, specifies that the feature attribute column names and values will be returned in the response. Defaults to true.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.MapsQueryNearestQueryOptions.FeatureAttributesToReturn">
            <summary>
            If <para>ReturnFeatureAttributes</para> is true, this allows the user to specify which a specific subset of attributes to be returned.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.MapsQueryResult">
            <summary>
            Represents the result of the query.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.MapsQueryResult.Features">
            <summary>
            The queried features.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.MapsQueryResult.Exception">
            <summary>
            The exception when quering.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.MapsQuerySpatialQueryOptions">
            <summary>
            The class contains the options of the spatial query.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.MapsQuerySpatialQueryOptions.MaxResults">
            <summary>
            The maximum number of features to return. Defaults to 100.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.MapsQuerySpatialQueryOptions.ReturnFeatureAttributes">
            <summary>
            If true, specifies that the feature attribute column names and values will be returned in the response. Defaults to true.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.MapsQuerySpatialQueryOptions.FeatureAttributesToReturn">
            <summary>
            If <para>ReturnFeatureAttributes</para> is true, this allows the user to specify which a specific subset of attributes to be returned.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.MapProjection">
            <summary>
            This enumeration represents projection.
            </summary>
            <remarks>This enumeration represents projection.</remarks>
        </member>
        <member name="F:ThinkGeo.Cloud.MapProjection.SphericalMercator">
            <summary>
            SphericalMercator, for example, the Google Maps use EPSG:900913 is spherical mercator.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.MapsClient">
            <summary>
            A class provides the methods to access the WorldImagery APIs.
            </summary>
            <remarks>A class provides the methods to access the WorldImagery APIs.</remarks>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsClient.#ctor">
            <summary>
            Initilizes an instance. You need apply client Id and secret by properties.
            </summary>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsClient.#ctor(System.String,System.String)">
            <summary>
            Initializes an instance with ClientID and ClientSecret. 
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="clientId"/> or <paramref name="clientSecret"/> is null.</exception>
            <param name="clientId">The ClientID for the auth.</param>
            <param name="clientSecret">The ClientSecret for the auth.</param>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsClient.GetRasterTile(System.Int64,System.Int64,System.Int64,ThinkGeo.Cloud.MapProjection,ThinkGeo.Cloud.RasterMapType,ThinkGeo.Cloud.TileSize,ThinkGeo.Cloud.TileResolution)">
            <summary>
            Get a World Imagery tile by XYZ.
            </summary>
            <param name="z">The Z value (zoom level) of the tile to get.</param>
            <param name="x">The X value (matrix column) of the tile to get.</param>
            <param name="y">The Y value (matrix row) of the tile to get.</param>
            <param name="projection">The projection to generate the tile.</param>
            <param name="mapType">The raster map type</param>
            <param name="tileSize">The tile size</param>
            <param name="tileResolution">The quality of tile image</param>
            <returns>stream of image</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsClient.GetRasterTileAsync(System.Int64,System.Int64,System.Int64,ThinkGeo.Cloud.MapProjection,ThinkGeo.Cloud.RasterMapType,ThinkGeo.Cloud.TileSize,ThinkGeo.Cloud.TileResolution)">
            <summary>
            Get a World Imagery tile by XYZ.
            </summary>
            <param name="z">The Z value (zoom level) of the tile to get.</param>
            <param name="x">The X value (matrix column) of the tile to get.</param>
            <param name="y">The Y value (matrix row) of the tile to get.</param>
            <param name="projection">The projection to generate the tile.</param>
            <param name="mapType">The raster map type</param>
            <param name="tileSize">The tile size</param>
            <param name="tileResolution">The quality of tile image</param>
            <returns>stream of image</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsClient.GetVectorTile(System.Int64,System.Int64,System.Int64,ThinkGeo.Cloud.MapProjection)">
            <summary>
            Get a World Streets vector tile by XYZ.
            </summary>
            <param name="z">The Z value (zoom level) of the tile to get.</param>
            <param name="x">The X value (matrix column) of the tile to get.</param>
            <param name="y">The Y value (matrix row) of the tile to get.</param>
            <param name="projection">The projection to generate the tile.</param>
            <returns>An MVT vector tile encoded as protobufs (PBF) and gzipped.</returns>
        </member>
        <member name="M:ThinkGeo.Cloud.MapsClient.GetVectorTileAsync(System.Int64,System.Int64,System.Int64,ThinkGeo.Cloud.MapProjection)">
            <summary>
            Get a World Streets vector tile by XYZ.
            </summary>
            <param name="z">The Z value (zoom level) of the tile to get.</param>
            <param name="x">The X value (matrix column) of the tile to get.</param>
            <param name="y">The Y value (matrix row) of the tile to get.</param>
            <param name="projection">The projection to generate the tile.</param>
            <returns>An MVT vector tile encoded as protobufs (PBF) and gzipped.</returns>
        </member>
        <member name="T:ThinkGeo.Cloud.RasterMapType">
            <summary>
            This enumeration specifies the raster map types.
            </summary>
            <remarks>This enumeration specifies the raster map types.</remarks>
        </member>
        <member name="F:ThinkGeo.Cloud.RasterMapType.Default">
            <summary>
            The default map type is Light.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.RasterMapType.Light">
            <summary>
             Specifies that the map is Light style
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.RasterMapType.Dark">
            <summary>
            Specifies that the map is dark style
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.RasterMapType.Hybrid">
            <summary>
            Specifies that the map includes physical features such as terrain and vegetation.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.RasterMapType.Aerial">
            <summary>
            Specifies that the map shows aerial.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.RasterMapType.TransparentBackground">
            <summary>
            Specifies that the map shows TransparentBackground.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.TileResolution">
            <summary>
            This enumeration specifies quality of tile image.
            </summary>
            <remarks>This enumeration specifies quality of tile image.</remarks>
        </member>
        <member name="F:ThinkGeo.Cloud.TileResolution.Default">
            <summary>
            Default value of the enumation, the same as Standard.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.TileResolution.Standard">
            <summary>
            This enumeration item means that tile image is standard quality
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.TileResolution.High">
            <summary>
            This enumeration item means that tile image is high quality
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.TileSize">
            <summary>
            This enumeration specifies tile size.
            </summary>
            <remarks>This enumeration specifies tile size.</remarks>
        </member>
        <member name="F:ThinkGeo.Cloud.TileSize.Default">
            <summary>
            Default value of the enumation, the same as Medium.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.TileSize.Small">
            <summary>
            This enumeration item means that tile size is 256 pixels
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.TileSize.Medium">
            <summary>
            This enumeration item means that tile size is 512 pixels
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.ProjectionClient">
            <summary>
            A class that provides the methods to access the GIS Server Projection APIs. 
            </summary>
            <remarks>A class that provides the methods to access the GIS Server Projection APIs.</remarks>
        </member>
        <member name="M:ThinkGeo.Cloud.ProjectionClient.#ctor">
            <summary>
            Create an instance of the Projection client, you need to apply ClientId and ClientSecret by properties. 
            </summary>
        </member>
        <member name="M:ThinkGeo.Cloud.ProjectionClient.#ctor(System.String,System.String)">
            <summary>
                Initializes an instance of the Projection client with a GIS Server client ID and Secret.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="clientId"/> or <paramref name="clientSecret"/> is null.</exception>
            <param name="clientId">The ClientId for the auth.</param>
            <param name="clientSecret">The ClientSecret for the auth.</param>
        </member>
        <member name="M:ThinkGeo.Cloud.ProjectionClient.Project(ThinkGeo.MapSuite.Shapes.Feature,System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>
                 Convert one geometry from one spatial reference system to another.
             </summary>
            
             <param name="feature">
                 The feature that you want to project.
             </param>
             <param name="fromProjectionInSrid">
                 The EPSG or ESRI ID (a.k.a. SRID) of the original spatial reference system in which the
                 geometry is expressed.
             </param>
             <param name="toProjectionInSrid">
                 The EPSG or ESRI ID (a.k.a. SRID) of the target spatial reference system that you want
                 the geometry reprojected to.
             </param>
            
             <returns>   Projected geometry. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:ThinkGeo.Cloud.ProjectionClient.Project(ThinkGeo.MapSuite.Shapes.Feature,System.Int32,System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>
                 Convert one geometry from one spatial reference system to another.
             </summary>
            
             <param name="feature">
                 The feature that you want to project.
             </param>
             <param name="fromProjectionInSrid">
                 The EPSG or ESRI ID (a.k.a. SRID) of the original spatial reference system in which the
                 geometry is expressed.
             </param>
             <param name="toProjectionInProj4String">
                 The Proj4 projection string describing the target spatial reference system that you want
                 the geometry projected to.
             </param>
            
             <returns>   Projected geometry. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:ThinkGeo.Cloud.ProjectionClient.Project(ThinkGeo.MapSuite.Shapes.Feature,System.String,System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>
                 Convert one geometry from one spatial reference system to another.
             </summary>
            
             <param name="feature">
                 The feature that you want to project.
             </param>
             <param name="fromProjectionInProj4String">
                 The Proj4 projection string describing the original spatial reference system in which the
                 geometry is expressed.
             </param>
             <param name="toProjectionInSrid">
                 The EPSG or ESRI ID (a.k.a. SRID) of the target spatial reference system that you want
                 the geometry reprojected to.
             </param>
            
             <returns>   Projected geometry. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:ThinkGeo.Cloud.ProjectionClient.Project(ThinkGeo.MapSuite.Shapes.Feature,System.String,System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>
                 Convert one geometry from one spatial reference system to another.
             </summary>
            
             <param name="feature">
                 The feature that you want to project.
             </param>
             <param name="fromProjectionInProj4String">
                 The Proj4 projection string describing the original spatial reference system in which the
                 geometry is expressed.
             </param>
             <param name="toProjectionInProj4String">
                 The Proj4 projection string describing the target spatial reference system that you want
                 the geometry projected to.
             </param>
            
             <returns>   Projected geometry. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:ThinkGeo.Cloud.ProjectionClient.ProjectAsync(ThinkGeo.MapSuite.Shapes.Feature,System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>
                 Convert one geometry from one spatial reference system to another.
             </summary>
            
             <param name="feature">
                 The feature that you want to project.
             </param>
             <param name="fromProjectionInSrid">
                 The EPSG or ESRI ID (a.k.a. SRID) of the original spatial reference system in which the
                 geometry is expressed.
             </param>
             <param name="toProjectionInSrid">
                 The EPSG or ESRI ID (a.k.a. SRID) of the target spatial reference system that you want
                 the geometry reprojected to.
             </param>
            
             <returns>   Projected geometry. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:ThinkGeo.Cloud.ProjectionClient.ProjectAsync(ThinkGeo.MapSuite.Shapes.Feature,System.Int32,System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>
                 Convert one geometry from one spatial reference system to another.
             </summary>
            
             <param name="feature">
                 The feature that you want to project.
             </param>
             <param name="fromProjectionInSrid">
                 The EPSG or ESRI ID (a.k.a. SRID) of the original spatial reference system in which the
                 geometry is expressed.
             </param>
             <param name="toProjectionInProj4String">
                 The Proj4 projection string describing the target spatial reference system that you want
                 the geometry projected to.
             </param>
            
             <returns>   Projected geometry. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:ThinkGeo.Cloud.ProjectionClient.ProjectAsync(ThinkGeo.MapSuite.Shapes.Feature,System.String,System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>
                 Convert one geometry from one spatial reference system to another.
             </summary>
            
             <param name="feature">
                 The feature that you want to project.
             </param>
             <param name="fromProjectionInProj4String">
                 The Proj4 projection string describing the original spatial reference system in which the
                 geometry is expressed.
             </param>
             <param name="toProjectionInSrid">
                 The EPSG or ESRI ID (a.k.a. SRID) of the target spatial reference system that you want
                 the geometry reprojected to.
             </param>
            
             <returns>   Projected geometry. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:ThinkGeo.Cloud.ProjectionClient.ProjectAsync(ThinkGeo.MapSuite.Shapes.Feature,System.String,System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>
                 Convert one geometry from one spatial reference system to another.
             </summary>
            
             <param name="feature">
                 The feature that you want to project.
             </param>
             <param name="fromProjectionInProj4String">
                 The Proj4 projection string describing the original spatial reference system in which the
                 geometry is expressed.
             </param>
             <param name="toProjectionInProj4String">
                 The Proj4 projection string describing the target spatial reference system that you want
                 the geometry projected to.
             </param>
            
             <returns>   Projected geometry. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:ThinkGeo.Cloud.ProjectionClient.Project(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.Feature},System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>
                 Converts multi geometries from one spatial reference system to another.
             </summary>
            
             <param name="features">
                 The feature that you want to project.
             </param>
             <param name="fromProjectionInSrid">
                 The EPSG or ESRI ID (a.k.a. SRID) of the original spatial reference system in which the
                 geometry is expressed.
             </param>
             <param name="toProjectionInSrid">
                 The EPSG or ESRI ID (a.k.a. SRID) of the target spatial reference system that you want
                 the geometry reprojected to.
             </param>
            
             <returns>   Projected geometry. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:ThinkGeo.Cloud.ProjectionClient.Project(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.Feature},System.Int32,System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>
                 Converts multi geometries from one spatial reference system to another.
             </summary>
            
             <param name="features">
                 The feature that you want to project.
             </param>
             <param name="fromProjectionInSrid">
                 The EPSG or ESRI ID (a.k.a. SRID) of the original spatial reference system in which the
                 geometry is expressed.
             </param>
             <param name="toProjectionInProj4String">
                 The Proj4 projection string describing the target spatial reference system that you want
                 the geometry projected to.
             </param>
            
             <returns>   Projected geometry. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:ThinkGeo.Cloud.ProjectionClient.Project(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.Feature},System.String,System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>
                 Converts multi geometries from one spatial reference system to another.
             </summary>
            
             <param name="features">
                 The feature that you want to project.
             </param>
             <param name="fromProjectionInProj4String">
                 The Proj4 projection string describing the original spatial reference system in which the
                 geometry is expressed.
             </param>
             <param name="toProjectionInSrid">
                 The EPSG or ESRI ID (a.k.a. SRID) of the target spatial reference system that you want
                 the geometry reprojected to.
             </param>
            
             <returns>   Projected geometry. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:ThinkGeo.Cloud.ProjectionClient.Project(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.Feature},System.String,System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>
                 Converts multi geometries from one spatial reference system to another.
             </summary>
            
             <param name="features">
                 The features that you want to project.
             </param>
             <param name="fromProjectionInProj4String">
                 The Proj4 projection string describing the original spatial reference system in which the
                 geometry is expressed.
             </param>
             <param name="toProjectionInProj4String">
                 The Proj4 projection string describing the target spatial reference system that you want
                 the geometry projected to.
             </param>
            
             <returns>   Projected geometry. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:ThinkGeo.Cloud.ProjectionClient.ProjectAsync(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.Feature},System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>
                 Converts multi geometries from one spatial reference system to another.
             </summary>
            
             <param name="features">
                 The feature that you want to project.
             </param>
             <param name="fromProjectionInSrid">
                 The EPSG or ESRI ID (a.k.a. SRID) of the original spatial reference system in which the
                 geometry is expressed.
             </param>
             <param name="toProjectionInSrid">
                 The EPSG or ESRI ID (a.k.a. SRID) of the target spatial reference system that you want
                 the geometry reprojected to.
             </param>
            
             <returns>   Projected geometry. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:ThinkGeo.Cloud.ProjectionClient.ProjectAsync(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.Feature},System.Int32,System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>
                 Converts multi geometries from one spatial reference system to another.
             </summary>
            
             <param name="features">
                 The feature that you want to project.
             </param>
             <param name="fromProjectionInSrid">
                 The EPSG or ESRI ID (a.k.a. SRID) of the original spatial reference system in which the
                 geometry is expressed.
             </param>
             <param name="toProjectionInProj4String">
                 The Proj4 projection string describing the target spatial reference system that you want
                 the geometry projected to.
             </param>
            
             <returns>   Projected geometry. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:ThinkGeo.Cloud.ProjectionClient.ProjectAsync(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.Feature},System.String,System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>
                 Converts multi geometries from one spatial reference system to another.
             </summary>
            
             <param name="features">
                 The feature that you want to project.
             </param>
             <param name="fromProjectionInProj4String">
                 The Proj4 projection string describing the original spatial reference system in which the
                 geometry is expressed.
             </param>
             <param name="toProjectionInSrid">
                 The EPSG or ESRI ID (a.k.a. SRID) of the target spatial reference system that you want
                 the geometry reprojected to.
             </param>
            
             <returns>   Projected geometry. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:ThinkGeo.Cloud.ProjectionClient.ProjectAsync(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.Feature},System.String,System.String)">
            -------------------------------------------------------------------------------------------------
             <summary>
                 Converts multi geometries from one spatial reference system to another.
             </summary>
            
             <param name="features">
                 The features that you want to project.
             </param>
             <param name="fromProjectionInProj4String">
                 The Proj4 projection string describing the original spatial reference system in which the
                 geometry is expressed.
             </param>
             <param name="toProjectionInProj4String">
                 The Proj4 projection string describing the target spatial reference system that you want
                 the geometry projected to.
             </param>
            
             <returns>   Projected geometry. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:ThinkGeo.Cloud.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.Resources.InputMustValid">
            <summary>
              Looks up a localized string similar to Input parameters is invalid.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.Resources.ValueMustInRange">
            <summary>
              Looks up a localized string similar to The value of ‘{0}&apos; must be between {1} and {2}..
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.Resources.ClientIDOrSecretInvalid">
            <summary>
              Looks up a localized string similar to ThinkGeo Cloud Maps require a Client ID and Secret......
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.LocationCategories">
            <summary>
            This enumeration specifies the location categories
            </summary>
            <remarks>This enumeration specifies the location categories</remarks>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.Common">
            <summary>
            Common location categories
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.All">
            <summary>
            All location categories
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.Aeroway">
            <summary>
            This enumeration item means Aeroway
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.Amenity">
            <summary>
            This enumeration item means Amenity
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.Barrier">
            <summary>
            This enumeration item means Barrier
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.Boundary">
            <summary>
            This enumeration item means Boundary
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.Building">
            <summary>
            This enumeration item means Building
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.Education">
            <summary>
            This enumeration item means Education
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.Entertainment">
            <summary>
            This enumeration item means Entertainment
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.Financial">
            <summary>
            This enumeration item means Financial
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.Healthcare">
            <summary>
            This enumeration item means Healthcare
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.Historic">
            <summary>
            This enumeration item means Historic
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.Leisure">
            <summary>
            This enumeration item means Leisure
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.Manmade">
            <summary>
            This enumeration item means Manmade
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.Natural">
            <summary>
            This enumeration item means Natural
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.Rail">
            <summary>
            This enumeration item means Rail
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.Power">
            <summary>
            This enumeration item means Power
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.Road">
            <summary>
            This enumeration item means Road
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.Shop">
            <summary>
            This enumeration item means Shop
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.Sport">
            <summary>
            This enumeration item means Sport
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.Sustenance">
            <summary>
            This enumeration item means Sustenance
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.Tourism">
            <summary>
            This enumeration item means Tourism
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.Transportation">
            <summary>
            This enumeration item means Transportation
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.Waterway">
            <summary>
            This enumeration item means Waterway
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.Intersection">
            <summary>
            This enumeration item means Intersection
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.AddressPoint">
            <summary>
            This enumeration item means AddressPoint
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.LocationCategories.Others">
            <summary>
            This enumeration item means Others
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.ReverseGeocodingClient">
            <summary>
            A class provides the methods to access the ReverseGeocoding APIs.
            </summary>
            <remarks>A class provides the methods to access the ReverseGeocoding APIs.</remarks>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.#ctor">
            <summary>
            Initilizes an instance. You need apply client Id and secret by properties.
            </summary>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.#ctor(System.String,System.String)">
            <summary>
            Initializes an instance with ClientID and ClientSecret. 
            It will send a request to GIS Server to gain the token which will be added to the Header for all the requests.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="clientId"/> or <paramref name="clientSecret"/> is null.</exception>
            <param name="clientId">The ClientID for the auth.</param>
            <param name="clientSecret">The ClientSecret for the auth.</param>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchPointInDecimalDegree(System.Double,System.Double,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Searches for locations around a point.
            </summary>
            <param name="latitude">The latitude of the point.</param>
            <param name="longitude">The longitude of the point.</param>
            <param name="searchRadius">The maximum radius around the input coordinate to search for places.</param>
            <param name="unitOfsearchRadius">The unit of measure in which the SearchRadius is expressed.</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchPointInDecimalDegree(System.Double,System.Double,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.ReverseGeocodingOptions)">
            <summary>
            Searches for locations around a point.
            </summary>
            <param name="latitude">The latitude of the point.</param>
            <param name="longitude">The longitude of the point.</param>
            <param name="searchRadius">The maximum radius around the input coordinate to search for places.</param>
            <param name="unitOfsearchRadius">The unit of measure in which the SearchRadius is expressed.</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchPoint(System.Double,System.Double,System.Int32,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Searches for locations around a point.
            </summary>
            <param name="y">The Y coordinate of the point.</param>
            <param name="x">The X coordinate of the point.</param>
            <param name="pointProjectionInSrid">The SRID (spatial reference system ID) of point.</param>
            <param name="searchRadius">The maximum radius around the input coordinate to search for places.</param>
            <param name="unitOfsearchRadius">The unit of measure in which the SearchRadius is expressed.</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchPoint(System.Double,System.Double,System.Int32,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.ReverseGeocodingOptions)">
            <summary>
            Searches for locations around a point.
            </summary>
            <param name="y">The Y coordinate of the point.</param>
            <param name="x">The X coordinate of the point.</param>
            <param name="pointProjectionInSrid">The SRID (spatial reference system ID) of point.</param>
            <param name="searchRadius">The maximum radius around the input coordinate to search for places.</param>
            <param name="unitOfsearchRadius">The unit of measure in which the SearchRadius is expressed.</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchPoint(System.Double,System.Double,System.String,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Searches for locations around a point.
            </summary>
            <param name="y">The Y coordinate of the point.</param>
            <param name="x">The X coordinate of the point.</param>
            <param name="pointProjectionInProj4String">The proj4string (coordinate system) of point.</param>
            <param name="searchRadius">The maximum radius around the input coordinate to search for places.</param>
            <param name="unitOfsearchRadius">The unit of measure in which the SearchRadius is expressed.</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchPoint(System.Double,System.Double,System.String,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.ReverseGeocodingOptions)">
            <summary>
            Searches for locations around a point.
            </summary>
            <param name="y">The Y coordinate of the point.</param>
            <param name="x">The X coordinate of the point.</param>
            <param name="pointProjectionInProj4String">The proj4string (coordinate system) of point.</param>
            <param name="searchRadius">The maximum radius around the input coordinate to search for places.</param>
            <param name="unitOfsearchRadius">The unit of measure in which the SearchRadius is expressed.</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchPointInDecimalDegreeAsync(System.Double,System.Double,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Searches for locations around a point.
            </summary>
            <param name="latitude">The latitude of the point.</param>
            <param name="longitude">The longitude of the point.</param>
            <param name="searchRadius">The maximum radius around the input coordinate to search for places.</param>
            <param name="unitOfsearchRadius">The unit of measure in which the SearchRadius is expressed.</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchPointInDecimalDegreeAsync(System.Double,System.Double,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.ReverseGeocodingOptions)">
            <summary>
            Searches for locations around a point.
            </summary>
            <param name="latitude">The latitude of the point.</param>
            <param name="longitude">The longitude of the point.</param>
            <param name="searchRadius">The maximum radius around the input coordinate to search for places.</param>
            <param name="unitOfsearchRadius">The unit of measure in which the SearchRadius is expressed.</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchPointAsync(System.Double,System.Double,System.Int32,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Searches for locations around a point.
            </summary>
            <param name="y">The Y coordinate of the point.</param>
            <param name="x">The X coordinate of the point.</param>
            <param name="pointProjectionInSrid">The SRID (spatial reference system ID) of point.</param>
            <param name="searchRadius">The maximum radius around the input coordinate to search for places.</param>
            <param name="unitOfsearchRadius">The unit of measure in which the SearchRadius is expressed.</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchPointAsync(System.Double,System.Double,System.Int32,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.ReverseGeocodingOptions)">
            <summary>
            Searches for locations around a point.
            </summary>
            <param name="y">The Y coordinate of the point.</param>
            <param name="x">The X coordinate of the point.</param>
            <param name="pointProjectionInSrid">The SRID (spatial reference system ID) of point.</param>
            <param name="searchRadius">The maximum radius around the input coordinate to search for places.</param>
            <param name="unitOfsearchRadius">The unit of measure in which the SearchRadius is expressed.</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchPointAsync(System.Double,System.Double,System.String,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Searches for locations around a point.
            </summary>
            <param name="y">The Y coordinate of the point.</param>
            <param name="x">The X coordinate of the point.</param>
            <param name="pointProjectionInProj4String">The proj4string (coordinate system) of point.</param>
            <param name="searchRadius">The maximum radius around the input coordinate to search for places.</param>
            <param name="unitOfsearchRadius">The unit of measure in which the SearchRadius is expressed.</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchPointAsync(System.Double,System.Double,System.String,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.ReverseGeocodingOptions)">
            <summary>
            Searches for locations around a point.
            </summary>
            <param name="y">The Y coordinate of the point.</param>
            <param name="x">The X coordinate of the point.</param>
            <param name="pointProjectionInProj4String">The proj4string (coordinate system) of point.</param>
            <param name="searchRadius">The maximum radius around the input coordinate to search for places.</param>
            <param name="unitOfsearchRadius">The unit of measure in which the SearchRadius is expressed.</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchPointsInDecimalDegree(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.PointShape},System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Searches the locations for points.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="points"/> is null or empty.</exception>
            <param name="points">The points to search.</param>
            <param name="searchRadius">The maximum radius around the input coordinate to search for places.</param>
            <param name="unitOfsearchRadius">The unit of measure in which the SearchRadius is expressed.</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchPointsInDecimalDegree(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.PointShape},System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.ReverseGeocodingOptions)">
            <summary>
            Searches the locations for points.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="points"/> is null or empty.</exception>
            <param name="points">The points to search.</param>
            <param name="searchRadius">The maximum radius around the input coordinate to search for places.</param>
            <param name="unitOfsearchRadius">The unit of measure in which the SearchRadius is expressed.</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchPoints(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.PointShape},System.Int32,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Searches the locations for points.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="points"/> is null or empty.</exception>
            <param name="points">The points to search.</param>
            <param name="pointsProjectionInSrid">The SRID (spatial reference system ID) in which to express the result.</param>
            <param name="searchRadius">The maximum radius around the input coordinate to search for places.</param>
            <param name="unitOfsearchRadius">The unit of measure in which the SearchRadius is expressed.</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchPoints(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.PointShape},System.Int32,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.ReverseGeocodingOptions)">
            <summary>
            Searches the locations for points.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="points"/> is null or empty.</exception>
            <param name="points">The points to search.</param>
            <param name="pointsProjectionInSrid">The SRID (spatial reference system ID) in which to express the result.</param>
            <param name="searchRadius">The maximum radius around the input coordinate to search for places.</param>
            <param name="unitOfsearchRadius">The unit of measure in which the SearchRadius is expressed.</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchPoints(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.PointShape},System.String,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Searches the locations for points.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="points"/> is null or empty.</exception>
            <param name="points">The points to search.</param>
            <param name="pointsProjectionInProj4String">The proj4string (coordinate system) in which to express the result.</param>
            <param name="searchRadius">The maximum radius around the input coordinate to search for places.</param>
            <param name="unitOfsearchRadius">The unit of measure in which the SearchRadius is expressed.</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchPoints(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.PointShape},System.String,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.ReverseGeocodingOptions)">
            <summary>
            Searches the locations for points.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="points"/> is null or empty.</exception>
            <param name="points">The points to search.</param>
            <param name="pointsProjectionInProj4String">The proj4string (coordinate system) in which to express the result.</param>
            <param name="searchRadius">The maximum radius around the input coordinate to search for places.</param>
            <param name="unitOfsearchRadius">The unit of measure in which the SearchRadius is expressed.</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchPointsInDecimalDegreeAsync(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.PointShape},System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Searches the locations for points.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="points"/> is null or empty.</exception>
            <param name="points">The points to search.</param>
            <param name="searchRadius">The maximum radius around the input coordinate to search for places.</param>
            <param name="unitOfsearchRadius">The unit of measure in which the SearchRadius is expressed.</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchPointsInDecimalDegreeAsync(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.PointShape},System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.ReverseGeocodingOptions)">
            <summary>
            Searches the locations for points.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="points"/> is null or empty.</exception>
            <param name="points">The points to search.</param>
            <param name="searchRadius">The maximum radius around the input coordinate to search for places.</param>
            <param name="unitOfsearchRadius">The unit of measure in which the SearchRadius is expressed.</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchPointsAsync(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.PointShape},System.Int32,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Searches the locations for points.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="points"/> is null or empty.</exception>
            <param name="points">The points to search.</param>
            <param name="pointsProjectionInSrid">The SRID (spatial reference system ID) in which to express the result.</param>
            <param name="searchRadius">The maximum radius around the input coordinate to search for places.</param>
            <param name="unitOfsearchRadius">The unit of measure in which the SearchRadius is expressed.</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchPointsAsync(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.PointShape},System.Int32,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.ReverseGeocodingOptions)">
            <summary>
            Searches the locations for points.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="points"/> is null or empty.</exception>
            <param name="points">The points to search.</param>
            <param name="pointsProjectionInSrid">The SRID (spatial reference system ID) in which to express the result.</param>
            <param name="searchRadius">The maximum radius around the input coordinate to search for places.</param>
            <param name="unitOfsearchRadius">The unit of measure in which the SearchRadius is expressed.</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchPointsAsync(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.PointShape},System.String,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Searches the locations for points.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="points"/> is null or empty.</exception>
            <param name="points">The points to search.</param>
            <param name="pointsProjectionInProj4String">The proj4string (coordinate system) in which to express the result.</param>
            <param name="searchRadius">The maximum radius around the input coordinate to search for places.</param>
            <param name="unitOfsearchRadius">The unit of measure in which the SearchRadius is expressed.</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchPointsAsync(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.PointShape},System.String,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.ReverseGeocodingOptions)">
            <summary>
            Searches the locations for points.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="points"/> is null or empty.</exception>
            <param name="points">The points to search.</param>
            <param name="pointsProjectionInProj4String">The proj4string (coordinate system) in which to express the result.</param>
            <param name="searchRadius">The maximum radius around the input coordinate to search for places.</param>
            <param name="unitOfsearchRadius">The unit of measure in which the SearchRadius is expressed.</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchLineInDecimalDegree(ThinkGeo.MapSuite.Shapes.LineShape,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Searches for locations along a line.
            </summary>
            <param name="line">The line feature to search.</param>
            <param name="searchBuffer">The buffer of search line.</param>
            <param name="unitOfsearchBuffer">>The unit of measure in which the searchBuffer is expressed.</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchLineInDecimalDegree(ThinkGeo.MapSuite.Shapes.LineShape,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.ReverseGeocodingOptions)">
            <summary>
            Searches for locations along a line.
            </summary>
            <param name="line">The line feature to search.</param>
            <param name="searchBuffer">The buffer of search line.</param>
            <param name="unitOfsearchBuffer">>The unit of measure in which the searchBuffer is expressed.</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchLine(ThinkGeo.MapSuite.Shapes.LineShape,System.Int32,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Searches for locations along a line.
            </summary>
            <param name="line">The line feature to search.</param>
            <param name="lineProjectionInSrid">The SRID (spatial reference system ID) of line.</param>
            <param name="searchBuffer">The buffer of search line.</param>
            <param name="unitOfsearchBuffer">>The unit of measure in which the searchBuffer is expressed.</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchLine(ThinkGeo.MapSuite.Shapes.LineShape,System.Int32,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.ReverseGeocodingOptions)">
            <summary>
            Searches for locations along a line.
            </summary>
            <param name="line">The line feature to search.</param>
            <param name="lineProjectionInSrid">The SRID (spatial reference system ID) of line.</param>
            <param name="searchBuffer">The buffer of search line.</param>
            <param name="unitOfsearchBuffer">>The unit of measure in which the searchBuffer is expressed.</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchLine(ThinkGeo.MapSuite.Shapes.LineShape,System.String,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Searches for locations along a line.
            </summary>
            <param name="line">The line feature to search.</param>
            <param name="lineProjectionInProj4String">The proj4string (coordinate system) of line.</param>
            <param name="searchBuffer">The buffer of search line.</param>
            <param name="unitOfsearchBuffer">>The unit of measure in which the searchBuffer is expressed.</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchLine(ThinkGeo.MapSuite.Shapes.LineShape,System.String,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.ReverseGeocodingOptions)">
            <summary>
            Searches for locations along a line.
            </summary>
            <param name="line">The line feature to search.</param>
            <param name="lineProjectionInProj4String">The proj4string (coordinate system) of line.</param>
            <param name="searchBuffer">The buffer of search line.</param>
            <param name="unitOfsearchBuffer">>The unit of measure in which the searchBuffer is expressed.</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchLineInDecimalDegreeAsync(ThinkGeo.MapSuite.Shapes.LineShape,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Searches for locations along a line.
            </summary>
            <param name="line">The line feature to search.</param>
            <param name="searchBuffer">The buffer of search line.</param>
            <param name="unitOfsearchBuffer">>The unit of measure in which the searchBuffer is expressed.</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchLineInDecimalDegreeAsync(ThinkGeo.MapSuite.Shapes.LineShape,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.ReverseGeocodingOptions)">
            <summary>
            Searches for locations along a line.
            </summary>
            <param name="line">The line feature to search.</param>
            <param name="searchBuffer">The buffer of search line.</param>
            <param name="unitOfsearchBuffer">>The unit of measure in which the searchBuffer is expressed.</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchLineAsync(ThinkGeo.MapSuite.Shapes.LineShape,System.Int32,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Searches for locations along a line.
            </summary>
            <param name="line">The line feature to search.</param>
            <param name="lineProjectionInSrid">The SRID (spatial reference system ID) of line.</param>
            <param name="searchBuffer">The buffer of search line.</param>
            <param name="unitOfsearchBuffer">>The unit of measure in which the searchBuffer is expressed.</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchLineAsync(ThinkGeo.MapSuite.Shapes.LineShape,System.Int32,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.ReverseGeocodingOptions)">
            <summary>
            Searches for locations along a line.
            </summary>
            <param name="line">The line feature to search.</param>
            <param name="lineProjectionInSrid">The SRID (spatial reference system ID) of line.</param>
            <param name="searchBuffer">The buffer of search line.</param>
            <param name="unitOfsearchBuffer">>The unit of measure in which the searchBuffer is expressed.</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchLineAsync(ThinkGeo.MapSuite.Shapes.LineShape,System.String,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit)">
            <summary>
            Searches for locations along a line.
            </summary>
            <param name="line">The line feature to search.</param>
            <param name="lineProjectionInProj4String">The proj4string (coordinate system) of line.</param>
            <param name="searchBuffer">The buffer of search line.</param>
            <param name="unitOfsearchBuffer">>The unit of measure in which the searchBuffer is expressed.</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchLineAsync(ThinkGeo.MapSuite.Shapes.LineShape,System.String,System.Double,ThinkGeo.MapSuite.Shapes.DistanceUnit,ThinkGeo.Cloud.ReverseGeocodingOptions)">
            <summary>
            Searches for locations along a line.
            </summary>
            <param name="line">The line feature to search.</param>
            <param name="lineProjectionInProj4String">The proj4string (coordinate system) of line.</param>
            <param name="searchBuffer">The buffer of search line.</param>
            <param name="unitOfsearchBuffer">>The unit of measure in which the searchBuffer is expressed.</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchAreaInDecimalDegree(ThinkGeo.MapSuite.Shapes.PolygonShape)">
            <summary>
            Searches for locations within an area.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="area"/> is null or empty.</exception>
            <param name="area">The polygon feature to search.</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchAreaInDecimalDegree(ThinkGeo.MapSuite.Shapes.PolygonShape,ThinkGeo.Cloud.ReverseGeocodingOptions)">
            <summary>
            Searches for locations within an area.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="area"/> is null or empty.</exception>
            <param name="area">The polygon feature to search.</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchArea(ThinkGeo.MapSuite.Shapes.PolygonShape,System.Int32)">
            <summary>
            Searches for locations within an area.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="area"/> is null or empty.</exception>
            <param name="area">The polygon feature to search.</param>
            <param name="areaProjectionInSrid">The SRID (spatial reference system ID) of area.</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchArea(ThinkGeo.MapSuite.Shapes.PolygonShape,System.Int32,ThinkGeo.Cloud.ReverseGeocodingOptions)">
            <summary>
            Searches for locations within an area.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="area"/> is null or empty.</exception>
            <param name="area">The polygon feature to search.</param>
            <param name="areaProjectionInSrid">The SRID (spatial reference system ID) of area.</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchArea(ThinkGeo.MapSuite.Shapes.PolygonShape,System.String)">
            <summary>
            Searches for locations within an area.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="area"/> is null or empty.</exception>
            <param name="area">The polygon feature to search.</param>
            <param name="areaProjectionInProj4String">The proj4string (coordinate system) of area.</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchArea(ThinkGeo.MapSuite.Shapes.PolygonShape,System.String,ThinkGeo.Cloud.ReverseGeocodingOptions)">
            <summary>
            Searches for locations within an area.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="area"/> is null or empty.</exception>
            <param name="area">The polygon feature to search.</param>
            <param name="areaProjectionInProj4String">The proj4string (coordinate system) in which to express the result.</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchAreaInDecimalDegreeAsync(ThinkGeo.MapSuite.Shapes.PolygonShape)">
            <summary>
            Searches for locations within an area.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="area"/> is null or empty.</exception>
            <param name="area">The polygon feature to search.</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchAreaInDecimalDegreeAsync(ThinkGeo.MapSuite.Shapes.PolygonShape,ThinkGeo.Cloud.ReverseGeocodingOptions)">
            <summary>
            Searches for locations within an area.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="area"/> is null or empty.</exception>
            <param name="area">The polygon feature to search.</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchAreaAsync(ThinkGeo.MapSuite.Shapes.PolygonShape,System.Int32)">
            <summary>
            Searches for locations within an area.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="area"/> is null or empty.</exception>
            <param name="area">The polygon feature to search.</param>
            <param name="areaProjectionInSrid">The SRID (spatial reference system ID) of area.</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchAreaAsync(ThinkGeo.MapSuite.Shapes.PolygonShape,System.Int32,ThinkGeo.Cloud.ReverseGeocodingOptions)">
            <summary>
            Searches for locations within an area.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="area"/> is null or empty.</exception>
            <param name="area">The polygon feature to search.</param>
            <param name="areaProjectionInSrid">The SRID (spatial reference system ID) of area.</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchAreaAsync(ThinkGeo.MapSuite.Shapes.PolygonShape,System.String)">
            <summary>
            Searches for locations within an area.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="area"/> is null or empty.</exception>
            <param name="area">The polygon feature to search.</param>
            <param name="areaProjectionInProj4String">The proj4string (coordinate system) of area.</param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingClient.SearchAreaAsync(ThinkGeo.MapSuite.Shapes.PolygonShape,System.String,ThinkGeo.Cloud.ReverseGeocodingOptions)">
            <summary>
            Searches for locations within an area.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="area"/> is null or empty.</exception>
            <param name="area">The polygon feature to search.</param>
            <param name="areaProjectionInProj4String">The proj4string (coordinate system) of area.</param>
            <param name="options">The options for the searching. <seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingOptions"/></param>
            <returns>The search result.<seealso cref="T:ThinkGeo.Cloud.ReverseGeocodingResult"/></returns>
        </member>
        <member name="T:ThinkGeo.Cloud.ReverseGeocodingLocation">
            <summary>
            A class presents the location for ReverseGeocoding.
            </summary>
            <remarks>A class presents the location for ReverseGeocoding.</remarks>
        </member>
        <member name="P:ThinkGeo.Cloud.ReverseGeocodingLocation.LocationFeature">
            <summary>
            The feature representing this location.  May be a point (e.g. a restaurant),
            a line (e.g. a road), or a polygon (e.g. a public park or a state boundary).
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.ReverseGeocodingLocation.LocationName">
            <summary>
            The name of this location, e.g. McDonald's.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.ReverseGeocodingLocation.DirectionFromQueryFeature">
            <summary>
            The cardinal direction of this location from the query shape you reverse geocoded.
            Note: won't apply when you use the reverse geocode area API.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.ReverseGeocodingLocation.DistanceFromQueryFeature">
            <summary>
            The distance of this location from the query shape you reverse geocoded.
            Note: will always be 0 when you use the reverse geocode area API.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.ReverseGeocodingLocation.LocationCategory">
            <summary>
            The category of this location, e.g. "Road", "Sustenance", "Building", etc.
            Many of these are based on known OpenStreetMap place categories.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.ReverseGeocodingLocation.LocationType">
            <summary>
            The type of location as defined by its OpenStreetMap type tag.
            Example 1: A location in the "Road" category may have a PlaceType of "primary".
            Example 2: A location in the "Building" category may have a PlaceType of "house".
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.ReverseGeocodingLocation.Address">
            <summary>
            The human-readable address of this location.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.ReverseGeocodingLocation.HouseNumber">
            <summary>
            The house number of this location's address.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.ReverseGeocodingLocation.Properties">
            <summary>
            Extended properties of the location. e.g., for a road, may contain properties 
            like the number of lanes, the surface type, whether it is one-way, etc.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.ReverseGeocodingLocation.Postcode">
            <summary>
            The postal code of the location, if applicable.
            NOTE: Only populated if your request specified ReverseGeocodingResultDetail.Verbose.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.ReverseGeocodingLocation.AddressComponents">
            <summary>
            A dictionary of individual address components, e.g. street, city, country, etc.
            NOTE: Only populated if your request specified ReverseGeocodingResultDetail.Verbose.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.ReverseGeocodingOptions">
            <summary>
            A class provides the options for the ReverseGeocoder APIs.
            </summary>
            <remarks>A class provides the options for the ReverseGeocoder APIs.</remarks>
        </member>
        <member name="P:ThinkGeo.Cloud.ReverseGeocodingOptions.MaxResults">
            <summary>
            The maximun number of results to return. Defaults to 20.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.ReverseGeocodingOptions.LocationCategories">
            <summary>
            The categories of places to include in the result set. The default value is "Common".
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.ReverseGeocodingOptions.ResultDetail">
            <summary>
            Specified that whether the reverse geocoding results should be verbose or not.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.ReverseGeocodingOptions.DistanceUnit">
            <summary>
            The unit of measure in which the distance is expressed. Defaults to "Meter".
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.ReverseGeocodingOptions.LocationTypes">
            <summary>
            Specified the types that should be included in the results. Defautls to empty.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.ReverseGeocodingResult">
            <summary>
            Represents the result of the ReverseGeocoding.
            </summary>
            <remarks>Represents the result of the ReverseGeocoding.</remarks>
        </member>
        <member name="M:ThinkGeo.Cloud.ReverseGeocodingResult.#ctor(ThinkGeo.MapSuite.Shapes.Feature,ThinkGeo.Cloud.ReverseGeocodingLocation,ThinkGeo.Cloud.ThinkGeoCloudApplicationException)">
            <summary>
            The constructor of this class.
            </summary>
            <param name="queryFeature">The ReverseGeocoding feature</param>
            <param name="bestMatchLocation">The best matching location</param>
            <param name="exception">The exception when reverse geocoding</param>
        </member>
        <member name="P:ThinkGeo.Cloud.ReverseGeocodingResult.QueryFeature">
            <summary>
            The ReverseGeocoding feature.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.ReverseGeocodingResult.BestMatchLocation">
            <summary>
            The best matching location.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.ReverseGeocodingResult.NearbyLocations">
            <summary>
            A collection of the matching location order by the distance ASC.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.ReverseGeocodingResult.Exception">
            <summary>
            The exception when reverse geocoding
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.ReverseGeocodingResultDetail">
            <summary>
            This enumeration specifies whether the reverse geocoding results should be verbose or not.
            </summary>
            <remarks>This enumeration specifies whether the reverse geocoding results should be verbose or not.</remarks>
        </member>
        <member name="F:ThinkGeo.Cloud.ReverseGeocodingResultDetail.Default">
            <summary>
            Default value of the enumation, the same as Standard.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.ReverseGeocodingResultDetail.Verbose">
            <summary>
            This enumeration item means that the reverse geocoding result has all properties
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.ReverseGeocodingResultDetail.Standard">
            <summary>
            This enumeration item means that the reverse geocoding result has fewer properties
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.RoutingClient">
            <summary>
            A class provides the methods to access the Routing APIs.
            </summary>
            <remarks>A class provides the methods to access the Routing APIs.</remarks>
        </member>
        <member name="M:ThinkGeo.Cloud.RoutingClient.#ctor">
            <summary>
            Initilizes an instance. You need apply client Id and secret by properties.
            </summary>
        </member>
        <member name="M:ThinkGeo.Cloud.RoutingClient.#ctor(System.String,System.String)">
            <summary>
            Initializes an instance with ClientID and ClientSecret. 
            It will send a request to GIS Server to gain the token which will be added to the Header for all the requests.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="clientId"/> or <paramref name="clientSecret"/> is null.</exception>
            <param name="clientId">The ClientID for the auth.</param>
            <param name="clientSecret">The ClientSecret for the auth.</param>
        </member>
        <member name="M:ThinkGeo.Cloud.RoutingClient.GetRoute(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.PointShape},ThinkGeo.Cloud.RoutingGetRouteOptions)">
            <summary>
            Calculate a route through the specified waypoints.
            </summary>
            <param name="waypoints">A list of coordinates to travel in order.</param>
            <param name="options">The options for the GetRoute. <seealso cref="T:ThinkGeo.Cloud.RoutingGetRouteOptions"/></param>
            <returns><seealso cref="T:ThinkGeo.Cloud.RoutingGetRouteResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.RoutingClient.GetRoute(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.PointShape},System.Int32,ThinkGeo.Cloud.RoutingGetRouteOptions)">
            <summary>
            Calculate a route through the specified waypoints.
            </summary>
            <param name="waypoints">A list of coordinates to travel in order.</param>
            <param name="srid">Specifies the SRID (spatial reference system ID). Defaults to 4326.</param>
            <param name="options">The options for the GetRoute. <seealso cref="T:ThinkGeo.Cloud.RoutingGetRouteOptions"/></param>
            <returns><seealso cref="T:ThinkGeo.Cloud.RoutingGetRouteResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.RoutingClient.GetRoute(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.PointShape},System.String,ThinkGeo.Cloud.RoutingGetRouteOptions)">
            <summary>
            Calculate a route through the specified waypoints.
            </summary>
            <param name="waypoints">A list of coordinates to travel in order.</param>
            <param name="proj4String">Specifies the proj4string (coordinate system).</param>
            <param name="options">The options for the GetRoute. <seealso cref="T:ThinkGeo.Cloud.RoutingGetRouteOptions"/></param>
            <returns><seealso cref="T:ThinkGeo.Cloud.RoutingGetRouteResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.RoutingClient.GetRouteAsync(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.PointShape},ThinkGeo.Cloud.RoutingGetRouteOptions)">
            <summary>
            Calculate a route through the specified waypoints.
            </summary>
            <param name="waypoints">A list of coordinates to travel in order.</param>
            <param name="options">The options for the GetRoute. <seealso cref="T:ThinkGeo.Cloud.RoutingGetRouteOptions"/></param>
            <returns><seealso cref="T:ThinkGeo.Cloud.RoutingGetRouteResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.RoutingClient.GetRouteAsync(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.PointShape},System.Int32,ThinkGeo.Cloud.RoutingGetRouteOptions)">
            <summary>
            Calculate a route through the specified waypoints.
            </summary>
            <param name="waypoints">A list of coordinates to travel in order.</param>
            <param name="srid">Specifies the SRID (spatial reference system ID). Defaults to 4326.</param>
            <param name="options">The options for the GetRoute. <seealso cref="T:ThinkGeo.Cloud.RoutingGetRouteOptions"/></param>
            <returns><seealso cref="T:ThinkGeo.Cloud.RoutingGetRouteResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.RoutingClient.GetRouteAsync(System.Collections.Generic.IEnumerable{ThinkGeo.MapSuite.Shapes.PointShape},System.String,ThinkGeo.Cloud.RoutingGetRouteOptions)">
            <summary>
            Calculate a route through the specified waypoints.
            </summary>
            <param name="waypoints">A list of coordinates to travel in order.</param>
            <param name="proj4String">Specifies the proj4string (coordinate system).</param>
            <param name="options">The options for the GetRoute. <seealso cref="T:ThinkGeo.Cloud.RoutingGetRouteOptions"/></param>
            <returns><seealso cref="T:ThinkGeo.Cloud.RoutingGetRouteResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.RoutingClient.GetServiceArea(ThinkGeo.MapSuite.Shapes.PointShape,System.Collections.Generic.IEnumerable{System.Double},ThinkGeo.Cloud.RoutingGetServiceAreaOptions)">
            <summary>
            Calculate the ServiceArea through the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="serviceLimits">The list represents the travel distances or travel times to generate for each facility.
            The maximum number of ServiceLimits is 6.</param>
            <param name="options">The options for the GetServiceArea.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.RoutingClient.GetServiceArea(ThinkGeo.MapSuite.Shapes.PointShape,System.Int32,System.Collections.Generic.IEnumerable{System.Double},ThinkGeo.Cloud.RoutingGetServiceAreaOptions)">
            <summary>
            Calculate the ServiceArea through the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="srid">Specifies the SRID (spatial reference system ID). Defaults to 4326.</param>
            <param name="serviceLimits">The list represents the travel distances or travel times to generate for each facility.
            The maximum number of ServiceLimits is 6.</param>
            <param name="options">The options for the GetServiceArea.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.RoutingClient.GetServiceArea(ThinkGeo.MapSuite.Shapes.PointShape,System.String,System.Collections.Generic.IEnumerable{System.Double},ThinkGeo.Cloud.RoutingGetServiceAreaOptions)">
            <summary>
            Calculate the ServiceArea through the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="proj4String">Specifies the proj4string (coordinate system).</param>
            <param name="serviceLimits">The list represents the travel distances or travel times to generate for each facility.
            The maximum number of ServiceLimits is 6.</param>
            <param name="options">The options for the GetServiceArea.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.RoutingClient.GetServiceArea(ThinkGeo.MapSuite.Shapes.PointShape,System.Collections.Generic.IEnumerable{System.TimeSpan},ThinkGeo.Cloud.RoutingGetServiceAreaOptions)">
            <summary>
            Calculate the ServiceArea through the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="serviceLimits">The list represents the travel distances or travel times to generate for each facility.
            The maximum number of ServiceLimits is 6.</param>
            <param name="options">The options for the GetServiceArea.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.RoutingClient.GetServiceArea(ThinkGeo.MapSuite.Shapes.PointShape,System.Int32,System.Collections.Generic.IEnumerable{System.TimeSpan},ThinkGeo.Cloud.RoutingGetServiceAreaOptions)">
            <summary>
            Calculate the ServiceArea through the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="srid">Specifies the SRID (spatial reference system ID). Defaults to 4326.</param>
            <param name="serviceLimits">The list represents the travel distances or travel times to generate for each facility.
            The maximum number of ServiceLimits is 6.</param>
            <param name="options">The options for the GetServiceArea.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.RoutingClient.GetServiceArea(ThinkGeo.MapSuite.Shapes.PointShape,System.String,System.Collections.Generic.IEnumerable{System.TimeSpan},ThinkGeo.Cloud.RoutingGetServiceAreaOptions)">
            <summary>
            Calculate the ServiceArea through the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="proj4String">Specifies the proj4string (coordinate system).</param>
            <param name="serviceLimits">The list represents the travel distances or travel times to generate for each facility.
            The maximum number of ServiceLimits is 6.</param>
            <param name="options">The options for the GetServiceArea.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.RoutingClient.GetServiceAreaAsync(ThinkGeo.MapSuite.Shapes.PointShape,System.Collections.Generic.IEnumerable{System.Double},ThinkGeo.Cloud.RoutingGetServiceAreaOptions)">
            <summary>
            Calculate the ServiceArea through the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="serviceLimits">The list represents the travel distances or travel times to generate for each facility.
            The maximum number of ServiceLimits is 6.</param>
            <param name="options">The options for the GetServiceArea.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.RoutingClient.GetServiceAreaAsync(ThinkGeo.MapSuite.Shapes.PointShape,System.Int32,System.Collections.Generic.IEnumerable{System.Double},ThinkGeo.Cloud.RoutingGetServiceAreaOptions)">
            <summary>
            Calculate the ServiceArea through the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="srid">Specifies the SRID (spatial reference system ID). Defaults to 4326.</param>
            <param name="serviceLimits">The list represents the travel distances or travel times to generate for each facility.
            The maximum number of ServiceLimits is 6.</param>
            <param name="options">The options for the GetServiceArea.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.RoutingClient.GetServiceAreaAsync(ThinkGeo.MapSuite.Shapes.PointShape,System.String,System.Collections.Generic.IEnumerable{System.Double},ThinkGeo.Cloud.RoutingGetServiceAreaOptions)">
            <summary>
            Calculate the ServiceArea through the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="proj4String">Specifies the proj4string (coordinate system).</param>
            <param name="serviceLimits">The list represents the travel distances or travel times to generate for each facility.
            The maximum number of ServiceLimits is 6.</param>
            <param name="options">The options for the GetServiceArea.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.RoutingClient.GetServiceAreaAsync(ThinkGeo.MapSuite.Shapes.PointShape,System.Collections.Generic.IEnumerable{System.TimeSpan},ThinkGeo.Cloud.RoutingGetServiceAreaOptions)">
            <summary>
            Calculate the ServiceArea through the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="serviceLimits">The list represents the travel distances or travel times to generate for each facility.
            The maximum number of ServiceLimits is 6.</param>
            <param name="options">The options for the GetServiceArea.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.RoutingClient.GetServiceAreaAsync(ThinkGeo.MapSuite.Shapes.PointShape,System.Int32,System.Collections.Generic.IEnumerable{System.TimeSpan},ThinkGeo.Cloud.RoutingGetServiceAreaOptions)">
            <summary>
            Calculate the ServiceArea through the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="srid">Specifies the SRID (spatial reference system ID). Defaults to 4326.</param>
            <param name="serviceLimits">The list represents the travel distances or travel times to generate for each facility.
            The maximum number of ServiceLimits is 6.</param>
            <param name="options">The options for the GetServiceArea.</param>
            <returns></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.RoutingClient.GetServiceAreaAsync(ThinkGeo.MapSuite.Shapes.PointShape,System.String,System.Collections.Generic.IEnumerable{System.TimeSpan},ThinkGeo.Cloud.RoutingGetServiceAreaOptions)">
            <summary>
            Calculate the ServiceArea through the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="proj4String">Specifies the proj4string (coordinate system).</param>
            <param name="serviceLimits">The list represents the travel distances or travel times to generate for each facility.
            The maximum number of ServiceLimits is 6.</param>
            <param name="options">The options for the GetServiceArea.</param>
            <returns></returns>
        </member>
        <member name="T:ThinkGeo.Cloud.RoutingGetRouteOptions">
            <summary>
            A class provides the options for the GetRoute API.
            </summary>
            <remarks>A class provides the options for the GetRoute API.</remarks>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingGetRouteOptions.TurnByTurn">
            <summary>
            Whether to return turn-by-turn instructions or not. Defaults to false.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingGetRouteOptions.CoordinateSnapRadius">
            <summary>
            The maximum distance of a coordinate can be snapped to the road network, in meters.
            Defaults to 5000.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingGetRouteOptions.CoordinateSnapRadiusUnit">
            <summary>
            The unit of the radius to snap the input coordinate to road network. Defaults to Meter.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingGetRouteOptions.DistanceUnit">
            <summary>
            The unit of measure in which to express the length of the route. Defaults to Meter.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.RoutingGetRouteResult">
            <summary>
            Represents the result of the GetRoute.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingGetRouteResult.RouteResult">
            <summary>
            The route result.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingGetRouteResult.Exception">
            <summary>
            The exception when getting route.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.RoutingGetServiceAreaOptions">
            <summary>
            A class provides the options for the GetServiceArea API.
            </summary>
            <remarks>A class provides the options for the GetServiceArea API.</remarks>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingGetServiceAreaOptions.DistanceUnit">
            <summary>
            The unit of measure in which to express the length of route.
            Defaults to Meter.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingGetServiceAreaOptions.ContourGranularity">
            <summary>
            A float in the range of (0, 1.0) to identify how much we want to remove the contours.
            0 means do not remove any contour at all, 1.0 means only return the largest contour.
            Defaults to 1.0.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingGetServiceAreaOptions.CoordinateSnapRadius">
            <summary>
            The maximum distance of a coordinate can be snapped to the road network.
            Defaults to 5000 meters.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingGetServiceAreaOptions.CoordinateSnapRadiusUnit">
            <summary>
            The unit of the radius to snap the input coordinate to road network.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingGetServiceAreaOptions.GridSizeInMeters">
            <summary>
            A float value in meters used as the tolerance for concave polygon.
            The smaller of the number is getting more accurate of the service areas but slower performance, better a value bigger than 300, but depends on the size of the result coverage.
            Defaults to 400.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingGetServiceAreaOptions.ServiceAreaSeparationType">
            <summary>
            Specify whether to include the region covered by the smaller service area into the region covered by the larger service area.
            Defaults to Separated.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingGetServiceAreaOptions.ServiceAreaType">
            <summary>
            Indicates whether the result is returned in polygon cancaved from accessing roads, or the linestrings as roads.
            Defaults to Polygon.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingGetServiceAreaOptions.TravelDirection">
            <summary>
            Indicates the direction of travel to or from the coordinates.
            Defaults to From.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.RoutingGetServiceAreaResult">
            <summary>
            Represents the result of the GetServiceArea.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingGetServiceAreaResult.ServiceAreaResult">
            <summary>
            The service area result.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingGetServiceAreaResult.Exception">
            <summary>
            The exception when getting service area.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.RoutingRoute">
            <summary>
            A route path object.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingRoute.Distance">
            <summary>
            Indicates the distance traveled through the waypoints which expressed in <para>DistanceUnit</para> applied. 
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingRoute.Duration">
            <summary>
            Indicates the estimated travel time through the waypoints in <para>DurationUnit</para> applied.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingRoute.Shape">
            <summary>
            The whole route path.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingRoute.Segments">
            <summary>
            An array of <seealso cref="T:ThinkGeo.Cloud.RoutingSegment"/>. It only returns when requested "TurnByTurn" is true.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingRoute.Warnings">
            <summary>
            Indicates whether there are some special messages you have to pay attention to. 
            For example, the route passes through the toll ways.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.RoutingRouteResult">
            <summary>
            A class that represents the routes between the specified waypoints.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingRouteResult.Waypoints">
            <summary>
            An array of waypoints, following the sequence of the input coordinates. 
            Each waypoint is an input coordinate snapped to the road network. 
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingRouteResult.Routes">
            <summary>
            An array of routes, following the sequence of the input coordinates. 
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.RoutingSegment">
            <summary>
            A segment object.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingSegment.Distance">
            <summary>
            Indicates the distance traveled through 2 adjacent waypoints in DistanceUnit. 
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingSegment.Duration">
            <summary>
            Indicates the estimated travel time through 2 adjacent waypoints in DurationUnit. 
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingSegment.Name">
            <summary>
            A string with the name of the road that forms part of the route segment.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingSegment.Instruction">
            <summary>
            A human-readable instruction of how to travel for the next.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingSegment.ManeuverType">
            <summary>
            A string indicating the direction change of the travel. 
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingSegment.Shape">
            <summary>
            The full route geometry from this route segment to the next route segment. 
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingSegment.Ref">
            <summary>
            A string representing the “reference” number or codes of the road that forms part of the route segment.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingSegment.IsToll">
            <summary>
            Indicates that a fee must be paid by general traffic to use this road.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingSegment.ManeuverLocation">
            <summary>
            A vertex represents the location of the maneuver.It’s presenting as "{y,x}".
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.RoutingServiceAreaResult">
            <summary>
            A class that represents the result of ServiceArea.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingServiceAreaResult.Waypoint">
            <summary>
            The waypoint object shows the coordiante snapped to the road network.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingServiceAreaResult.ServiceAreas">
            <summary>
            A "Polygon Collection" or "LineString Collection" in WellKnownText(WKT) format, presents the accessible areas within the specified traveling time or distance from the specific coordinate.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.RoutingServiceAreaObjectType">
            <summary>
            Specifies the shape type of ServiceArea.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.RoutingServiceAreaObjectType.Polygon">
            <summary>
            Polygon.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.RoutingServiceAreaObjectType.LineString">
            <summary>
            LineString.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.RoutingServiceAreaSeparationType">
            <summary>
            Specifies the type of ServiceArea separation.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.RoutingServiceAreaSeparationType.Separated">
            <summary>
            Separated.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.RoutingServiceAreaSeparationType.Merged">
            <summary>
            Merged.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.RoutingServiceAreaTravelDirection">
            <summary>
            Specifies the travel direction of the ServiceArea.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.RoutingServiceAreaTravelDirection.From">
            <summary>
            From.
            </summary>
        </member>
        <member name="F:ThinkGeo.Cloud.RoutingServiceAreaTravelDirection.To">
            <summary>
            To.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.RoutingWaypoint">
            <summary>
            Represents the result of snapping to road.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingWaypoint.Coordinate">
            <summary>
            The nearest routable point.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.RoutingWaypoint.SnappedDistance">
            <summary>
            The distance between the specified coordinate and the nearest routable point.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.ThinkGeoCloudApplicationException">
            <summary>
            An exception which is thrown when an error from GIS Server has occured.
            </summary>
            <remarks>An exception which is thrown when an error from GIS Server has occured.</remarks>
        </member>
        <member name="M:ThinkGeo.Cloud.ThinkGeoCloudApplicationException.#ctor(System.Net.HttpStatusCode,System.String,System.Exception)">
            <summary>
            Initializes an instace of GisServerServiceException with an HTTP code, an optional message and an optional inner exception.
            </summary>
            <param name="statusCode">The HTTP code returns from the server.</param>
            <param name="message">The error message from service if any.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="P:ThinkGeo.Cloud.ThinkGeoCloudApplicationException.StatusCode">
            <summary>
            Gets the HTTP status code.
            </summary>
        </member>
        <member name="T:ThinkGeo.Cloud.TimeZoneClient">
            <summary>
            A class provides the methods to access the TimeZone APIs.
            </summary>
            <remarks>A class provides the methods to access the TimeZone APIs.</remarks>
        </member>
        <member name="M:ThinkGeo.Cloud.TimeZoneClient.#ctor">
            <summary>
            Initilizes an instance. You need apply client Id and secret by properties.
            </summary>
        </member>
        <member name="M:ThinkGeo.Cloud.TimeZoneClient.#ctor(System.String,System.String)">
            <summary>
            Initializes an instance with ClientID and ClientSecret.
            It will send a request to GIS Server to gain the token which will be added to the Header for all the requests.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when the <paramref name="clientId"/> or <paramref name="clientSecret"/> is null.</exception>
            <param name="clientId">The ClientID for the auth.</param>
            <param name="clientSecret">The ClientSecret for the auth.</param>
        </member>
        <member name="M:ThinkGeo.Cloud.TimeZoneClient.GetTimeZoneByCoordinate(System.Double,System.Double)">
            <summary>
            Get the time zone of a coodinate.
            </summary>
            <param name="latitude">The latitude of the coodinate.</param>
            <param name="longitude">The longitude of the coodinate.</param>
            <returns>The time zone result.<seealso cref="T:ThinkGeo.Cloud.TimeZoneResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.TimeZoneClient.GetTimeZoneByCoordinate(System.Double,System.Double,System.Int32)">
            <summary>
            Get the time zone of a coodinate.
            </summary>
            <param name="x">The X of the coordinate.</param>
            <param name="y">The Y of the coordinate.</param>
            <param name="projectionInSrid">The Srid of the coordinate.</param>
            <returns>The time zone result.<seealso cref="T:ThinkGeo.Cloud.TimeZoneResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.TimeZoneClient.GetTimeZoneByCoordinate(System.Double,System.Double,System.String)">
            <summary>
            Get the time zone of a coodinate.
            </summary>
            <param name="x">The X of the coordinate.</param>
            <param name="y">The Y of the coordinate.</param>
            <param name="projectionInProj4String">The Proj4String of the coordinate.</param>
            <returns>The time zone result.<seealso cref="T:ThinkGeo.Cloud.TimeZoneResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.TimeZoneClient.GetTimeZoneByCoordinateAsync(System.Double,System.Double)">
            <summary>
            Get the time zone of a coodinate.
            </summary>
            <param name="latitude">The latitude of the coodinate.</param>
            <param name="longitude">The longitude of the coodinate.</param>
            <returns>The time zone result.<seealso cref="T:ThinkGeo.Cloud.TimeZoneResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.TimeZoneClient.GetTimeZoneByCoordinateAsync(System.Double,System.Double,System.Int32)">
            <summary>
            Get the time zone of a coodinate.
            </summary>
            <param name="x">The X of the coordinate.</param>
            <param name="y">The Y of the coordinate.</param>
            <param name="projectionInSrid">The Srid of the coordinate.</param>
            <returns>The time zone result.<seealso cref="T:ThinkGeo.Cloud.TimeZoneResult"/></returns>
        </member>
        <member name="M:ThinkGeo.Cloud.TimeZoneClient.GetTimeZoneByCoordinateAsync(System.Double,System.Double,System.String)">
            <summary>
            Get the time zone of a coodinate.
            </summary>
            <param name="x">The X of the coordinate.</param>
            <param name="y">The Y of the coordinate.</param>
            <param name="projectionInProj4String">The Proj4String of the coordinate.</param>
            <returns>The time zone result.<seealso cref="T:ThinkGeo.Cloud.TimeZoneResult"/></returns>
        </member>
        <member name="T:ThinkGeo.Cloud.TimeZoneResult">
            <summary>
            Represents the result of the TimeZone.
            </summary>
            <remarks>Represents the result of the TimeZone.</remarks>
        </member>
        <member name="M:ThinkGeo.Cloud.TimeZoneResult.#ctor(System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.Double)">
            <summary>
            The constructor of this class.
            </summary>
            <param name="timezone">The Olsen ID of the timezone</param>
            <param name="countryName">The country name</param>
            <param name="countryCode">The country code</param>
            <param name="comment">The comment</param>
            <param name="currentLocalTime">The current local time</param>
            <param name="currentUtcTime">The current UTC time</param>
            <param name="offsetSeconds">The number of seconds the local timezone is offset from UTC</param>
        </member>
        <member name="P:ThinkGeo.Cloud.TimeZoneResult.TimeZone">
            <summary>
            The Olsen ID of the timezone.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.TimeZoneResult.CountryName">
            <summary>
            The country name.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.TimeZoneResult.CountryCode">
            <summary>
            The country code.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.TimeZoneResult.Comment">
            <summary>
            The comment.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.TimeZoneResult.CurrentLocalTime">
            <summary>
            The current local time.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.TimeZoneResult.CurrentUtcTime">
            <summary>
            The current UTC time.
            </summary>
        </member>
        <member name="P:ThinkGeo.Cloud.TimeZoneResult.OffsetSeconds">
            <summary>
            The number of seconds the local timezone is offset from UTC.
            </summary>
        </member>
    </members>
</doc>
